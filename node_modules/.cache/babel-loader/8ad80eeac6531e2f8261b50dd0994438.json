{"ast":null,"code":"import Firebase from \"firebase\";\nexport const saveStockInDataBase = (type, soustype, stock) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}`).set(stock);\n  console.log(\"DATA SAVED\");\n};\nexport const saveNewComponentInDataBase = (type, indexTypeAvailable) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}`).set(\"NULL\");\n  Firebase.database().ref(`/stock/componentsStock/${type}/typeAvailable/0`).set(type);\n  Firebase.database().ref(`/stock/componentsAvailable/${indexTypeAvailable}`).set(type);\n};\nexport const deleteValueInDataBase = (type, soustype, index) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}/${index}`).set(null);\n  console.log(\"DATA SAVED\");\n};\nexport const saveNewValueInDataBase = (type, soustype, value, index) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}/${index}`).set(value);\n  console.log(\"DATA SAVED\");\n};\nexport const saveNewSousTypeInDataBase = (type, soustype, indexTypeAvailable) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/typeAvailable/${indexTypeAvailable}`).set(soustype);\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}`).set('null');\n  console.log(\"DATA SAVED\");\n};\nexport const updateStockAfterAddPedals = (path, value) => {\n  Firebase.database().ref(`/stock/componentsStock/${path}/stock`).set(value);\n  console.log(\"DATA SAVED\");\n};\nexport const getStockDataBase = callback => {\n  let ref = Firebase.database().ref(\"/stock\");\n  ref.on(\"value\", snapshot => {\n    const data = snapshot.val();\n    console.log(\"stock API\", data);\n    callback(data);\n  });\n};","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/request/stockAPI.js"],"names":["Firebase","saveStockInDataBase","type","soustype","stock","database","ref","set","console","log","saveNewComponentInDataBase","indexTypeAvailable","deleteValueInDataBase","index","saveNewValueInDataBase","value","saveNewSousTypeInDataBase","updateStockAfterAddPedals","path","getStockDataBase","callback","on","snapshot","data","val"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,KAA2B;AAC5DJ,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,IAAGC,QAAS,EADlD,EAEGI,GAFH,CAEOH,KAFP;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMC,0BAA0B,GAAG,CAACR,IAAD,EAAOS,kBAAP,KAA8B;AACtEX,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,EADtC,EAEGK,GAFH,CAEO,MAFP;AAIAP,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,kBADtC,EAEGK,GAFH,CAEOL,IAFP;AAIAF,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,8BAA6BK,kBAAmB,EADxD,EAEGJ,GAFH,CAEOL,IAFP;AAGD,CAZM;AAcP,OAAO,MAAMU,qBAAqB,GAAG,CAACV,IAAD,EAAOC,QAAP,EAAiBU,KAAjB,KAA2B;AAC9Db,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,IAAGC,QAAS,IAAGU,KAAM,EAD3D,EAEGN,GAFH,CAEO,IAFP;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMK,sBAAsB,GAAG,CAACZ,IAAD,EAAOC,QAAP,EAAiBY,KAAjB,EAAwBF,KAAxB,KAAkC;AACtEb,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,IAAGC,QAAS,IAAGU,KAAM,EAD3D,EAEGN,GAFH,CAEOQ,KAFP;AAGAP,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMO,yBAAyB,GAAG,CACvCd,IADuC,EAEvCC,QAFuC,EAGvCQ,kBAHuC,KAIpC;AACHX,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,kBAAiBS,kBAAmB,EAD1E,EAEGJ,GAFH,CAEOJ,QAFP;AAIAH,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,IAAGC,QAAS,EADlD,EAEGI,GAFH,CAEO,MAFP;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CAdM;AAgBP,OAAO,MAAMQ,yBAAyB,GAAG,CAACC,IAAD,EAAOH,KAAP,KAAiB;AACxDf,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBY,IAAK,QADtC,EAEGX,GAFH,CAEOQ,KAFP;AAGAP,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMU,gBAAgB,GAAIC,QAAD,IAAc;AAC5C,MAAId,GAAG,GAAGN,QAAQ,CAACK,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,CAAV;AACAA,EAAAA,GAAG,CAACe,EAAJ,CAAO,OAAP,EAAiBC,QAAD,IAAc;AAC5B,UAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBc,IAAzB;AACAH,IAAAA,QAAQ,CAACG,IAAD,CAAR;AACD,GAJD;AAKD,CAPM","sourcesContent":["import Firebase from \"firebase\";\n\nexport const saveStockInDataBase = (type, soustype, stock) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}`)\n    .set(stock);\n  console.log(\"DATA SAVED\");\n};\n\nexport const saveNewComponentInDataBase = (type, indexTypeAvailable) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}`)\n    .set(\"NULL\");\n\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/typeAvailable/0`)\n    .set(type);\n\n  Firebase.database()\n    .ref(`/stock/componentsAvailable/${indexTypeAvailable}`)\n    .set(type);\n};\n\nexport const deleteValueInDataBase = (type, soustype, index) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}/${index}`)\n    .set(null);\n  console.log(\"DATA SAVED\");\n};\n\nexport const saveNewValueInDataBase = (type, soustype, value, index) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}/${index}`)\n    .set(value);\n  console.log(\"DATA SAVED\");\n};\n\nexport const saveNewSousTypeInDataBase = (\n  type,\n  soustype,\n  indexTypeAvailable\n) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/typeAvailable/${indexTypeAvailable}`)\n    .set(soustype);\n\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}`)\n    .set('null');\n\n  console.log(\"DATA SAVED\");\n};\n\nexport const updateStockAfterAddPedals = (path, value) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${path}/stock`)\n    .set(value);\n  console.log(\"DATA SAVED\");\n};\n\nexport const getStockDataBase = (callback) => {\n  let ref = Firebase.database().ref(\"/stock\");\n  ref.on(\"value\", (snapshot) => {\n    const data = snapshot.val();\n    console.log(\"stock API\", data);\n    callback(data);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}