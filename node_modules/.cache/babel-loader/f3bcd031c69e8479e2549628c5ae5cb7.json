{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStock/TableStockComponent.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { Card, CardActions, CardContent, Avatar, IconButton, Table, TableBody, TableCell, TableHead, TableRow, TableContainer, CardHeader, Grid, Button, TextField } from \"@material-ui/core\";\nimport EditRounded from \"@material-ui/icons/EditRounded\";\nimport SaveRounded from \"@material-ui/icons/SaveRounded\";\nimport StockInfo from \"./StockInfo\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  container: {\n    maxHeight: 740\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nconst TableStockComponent = props => {\n  const {\n    className,\n    listTable,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [componentInfo, setComponentInfo] = useState({});\n  const [modify, setModify] = useState(false);\n  const sizeGrid = 12 / (Object.keys(listTable).length - 1);\n\n  function handleModify() {\n    setModify(true);\n  }\n\n  function handleSave() {\n    setModify(false);\n  }\n\n  useEffect(() => {\n    console.log(\"component tableGE\", listTable);\n\n    if (listTable !== undefined) {\n      const index = Object.keys(listTable).findIndex(p => p.attr1 == \"typeAvailable\");\n      Object.keys(listTable).slice(index);\n      console.log(\"size list\", listTable);\n      setComponentInfo(listTable);\n    }\n  }, [listTable]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, Object.keys(componentInfo).map((keyName, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: sizeGrid === 12 ? 6 : sizeGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, keyName !== \"typeAvailable\" && /*#__PURE__*/React.createElement(StockInfo, {\n    groupComponents: Object.values(componentInfo[keyName]),\n    nameGroup: keyName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }))));\n};\n\nTableStockComponent.propTypes = {\n  className: PropTypes.string,\n  listTable: PropTypes.object\n};\nexport default TableStockComponent;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStock/TableStockComponent.js"],"names":["React","useEffect","useState","PropTypes","clsx","makeStyles","withStyles","Card","CardActions","CardContent","Avatar","IconButton","Table","TableBody","TableCell","TableHead","TableRow","TableContainer","CardHeader","Grid","Button","TextField","EditRounded","SaveRounded","StockInfo","useStyles","theme","root","row","height","display","alignItems","marginTop","spacing","spacer","flexGrow","importButton","marginRight","exportButton","searchInput","container","maxHeight","headerTitle","paddingBottom","justifyContent","StyledTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","background","default","TableStockComponent","props","className","listTable","rest","classes","componentInfo","setComponentInfo","modify","setModify","sizeGrid","Object","keys","length","handleModify","handleSave","console","log","undefined","index","findIndex","p","attr1","slice","map","keyName","i","values","propTypes","string","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableContainer,\n  CardHeader,\n  Grid,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport EditRounded from \"@material-ui/icons/EditRounded\";\nimport SaveRounded from \"@material-ui/icons/SaveRounded\";\nimport StockInfo from \"./StockInfo\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1),\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  importButton: {\n    marginRight: theme.spacing(1),\n  },\n  exportButton: {\n    marginRight: theme.spacing(1),\n  },\n  searchInput: {\n    marginRight: theme.spacing(1),\n  },\n  container: {\n    maxHeight: 740,\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst TableStockComponent = (props) => {\n  const { className, listTable, ...rest } = props;\n\n  const classes = useStyles();\n  const [componentInfo, setComponentInfo] = useState({});\n  const [modify, setModify] = useState(false);\n  const sizeGrid = 12 / (Object.keys(listTable).length - 1);\n\n  function handleModify() {\n    setModify(true);\n  }\n\n  function handleSave() {\n    setModify(false);\n  }\n\n  useEffect(() => {\n    console.log(\"component tableGE\", listTable);\n    if (listTable !== undefined) {\n      const index = Object.keys(listTable).findIndex(\n        (p) => p.attr1 == \"typeAvailable\"\n      );\n      Object.keys(listTable).slice(index);\n      console.log(\"size list\", listTable);\n      setComponentInfo(listTable);\n    }\n  }, [listTable]);\n\n  return (\n    <Grid container spacing={3}>\n      {Object.keys(componentInfo).map((keyName, i) => (\n        <Grid item xs={sizeGrid === 12 ? 6 : sizeGrid}>\n          {keyName !== \"typeAvailable\" && (\n\n            <StockInfo groupComponents={Object.values(componentInfo[keyName])} nameGroup={keyName}/>\n            \n          )}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nTableStockComponent.propTypes = {\n  className: PropTypes.string,\n  listTable: PropTypes.object,\n};\n\nexport default TableStockComponent;\n"]},"metadata":{},"sourceType":"module"}