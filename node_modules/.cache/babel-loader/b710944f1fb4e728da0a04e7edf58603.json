{"ast":null,"code":"import Firebase from \"firebase\";\nexport const saveNewAccommodation = (accomodation, id, ownerId) => {\n  Firebase.database().ref(\"id_user/accomodations/\" + id).set({\n    id: id,\n    loyer: {\n      fixe: accomodation.fixe,\n      charges: accomodation.charges,\n      tva: accomodation.tva || 0\n    },\n    rental: {\n      civility: accomodation.civility || null,\n      lastname: accomodation.lastname || null,\n      firstname: accomodation.firstname || null,\n      isSociety: accomodation.isSociety || null,\n      socialIdentity: accomodation.socialIdentity || null\n    },\n    address: {\n      postalCode: accomodation.postalCode,\n      city: accomodation.city,\n      street: accomodation.street,\n      otherInformations: accomodation.otherInformations || null\n    },\n    isCommercial: accomodation.isCommercial,\n    owner: ownerId\n  });\n};\nexport const deleteValueInDataBase = (type, soustype, index) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}/${index}`).set(null);\n  console.log(\"DATA SAVED\");\n};\nexport const updateStockAfterAddPedals = (path, value) => {\n  Firebase.database().ref(`/stock/componentsStock/${path}/stock`).set(value);\n  console.log(\"DATA SAVED\");\n};\nexport const getAccomodationByOwner = (ownerID, callback) => {\n  let ref = Firebase.database().ref(\"id_user/accomodations\");\n  ref.on(\"value\", snapshot => {\n    const data = snapshot.val();\n    callback(data);\n  });\n};","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/Macron business/src/request/accomodationAPI.js"],"names":["Firebase","saveNewAccommodation","accomodation","id","ownerId","database","ref","set","loyer","fixe","charges","tva","rental","civility","lastname","firstname","isSociety","socialIdentity","address","postalCode","city","street","otherInformations","isCommercial","owner","deleteValueInDataBase","type","soustype","index","console","log","updateStockAfterAddPedals","path","value","getAccomodationByOwner","ownerID","callback","on","snapshot","data","val"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,YAAD,EAAeC,EAAf,EAAmBC,OAAnB,KAA+B;AACjEJ,EAAAA,QAAQ,CAACK,QAAT,GAAoBC,GAApB,CAAwB,2BAA2BH,EAAnD,EAAuDI,GAAvD,CAA2D;AACzDJ,IAAAA,EAAE,EAAEA,EADqD;AAEzDK,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAGP,YAAY,CAACO,IADjB;AAEHC,MAAAA,OAAO,EAAGR,YAAY,CAACQ,OAFpB;AAGHC,MAAAA,GAAG,EAAGT,YAAY,CAACS,GAAb,IAAoB;AAHvB,KAFkD;AAOzDC,IAAAA,MAAM,EAAG;AACLC,MAAAA,QAAQ,EAAEX,YAAY,CAACW,QAAb,IAAyB,IAD9B;AAELC,MAAAA,QAAQ,EAAEZ,YAAY,CAACY,QAAb,IAAyB,IAF9B;AAGLC,MAAAA,SAAS,EAAEb,YAAY,CAACa,SAAb,IAA0B,IAHhC;AAILC,MAAAA,SAAS,EAAEd,YAAY,CAACc,SAAb,IAA0B,IAJhC;AAKLC,MAAAA,cAAc,EAAEf,YAAY,CAACe,cAAb,IAA+B;AAL1C,KAPgD;AAczDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EAAEjB,YAAY,CAACiB,UADlB;AAEPC,MAAAA,IAAI,EAAElB,YAAY,CAACkB,IAFZ;AAGPC,MAAAA,MAAM,EAAEnB,YAAY,CAACmB,MAHd;AAIPC,MAAAA,iBAAiB,EAAGpB,YAAY,CAACoB,iBAAb,IAAkC;AAJ/C,KAdgD;AAoBzDC,IAAAA,YAAY,EAAErB,YAAY,CAACqB,YApB8B;AAqBzDC,IAAAA,KAAK,EAAGpB;AArBiD,GAA3D;AAuBD,CAxBM;AA0BP,OAAO,MAAMqB,qBAAqB,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,KAA2B;AAC9D5B,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBoB,IAAK,IAAGC,QAAS,IAAGC,KAAM,EAD3D,EAEGrB,GAFH,CAEO,IAFP;AAGAsB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAQP,OAAO,MAAMC,yBAAyB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxDjC,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyB0B,IAAK,QADtC,EAEGzB,GAFH,CAEO0B,KAFP;AAGAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMI,sBAAsB,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC3D,MAAI9B,GAAG,GAAGN,QAAQ,CAACK,QAAT,GAAoBC,GAApB,CAAwB,uBAAxB,CAAV;AACAA,EAAAA,GAAG,CAAC+B,EAAJ,CAAO,OAAP,EAAiBC,QAAD,IAAc;AAC5B,UAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAJ,IAAAA,QAAQ,CAACG,IAAD,CAAR;AACD,GAHD;AAID,CANM","sourcesContent":["import Firebase from \"firebase\";\n\nexport const saveNewAccommodation = (accomodation, id, ownerId) => {\n  Firebase.database().ref(\"id_user/accomodations/\" + id).set({\n    id: id,\n    loyer: {\n        fixe : accomodation.fixe,\n        charges : accomodation.charges,\n        tva : accomodation.tva || 0\n    },\n    rental :Â {\n        civility: accomodation.civility || null,\n        lastname: accomodation.lastname || null,\n        firstname: accomodation.firstname || null,\n        isSociety: accomodation.isSociety || null,\n        socialIdentity: accomodation.socialIdentity || null,\n    },\n    address: {\n      postalCode: accomodation.postalCode,\n      city: accomodation.city,\n      street: accomodation.street,\n      otherInformations : accomodation.otherInformations || null\n    },\n    isCommercial: accomodation.isCommercial,\n    owner : ownerId\n  })\n};\n\nexport const deleteValueInDataBase = (type, soustype, index) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}/${index}`)\n    .set(null);\n  console.log(\"DATA SAVED\");\n};\n\n\nexport const updateStockAfterAddPedals = (path, value) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${path}/stock`)\n    .set(value);\n  console.log(\"DATA SAVED\");\n};\n\nexport const getAccomodationByOwner = (ownerID, callback) => {\n  let ref = Firebase.database().ref(\"id_user/accomodations\");\n  ref.on(\"value\", (snapshot) => {\n    const data = snapshot.val();\n    callback(data);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}