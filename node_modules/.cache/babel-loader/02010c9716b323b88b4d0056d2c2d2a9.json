{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/Macron business/src/views/Settings/Components/TemplateEdit.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { func } from \"prop-types\";\nimport { Typography, Grid, TextField, Button } from \"@material-ui/core\";\nimport { getTemplateByIdAPI, updateTemplateAPI } from \"request/settingsAPI\";\nimport { useParams } from \"react-router-dom\";\nimport { Report } from \"@material-ui/icons\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(6)\n  },\n  button: {\n    marginBottom: 30\n  },\n  title: {\n    marginBottom: 10\n  },\n  cellRight: {\n    textAlign: \"right\",\n    paddingRight: 25\n  }\n}));\nconst matching = [\"Nom du locataire : [name_rental]\", \"Civilité du locataire : [civility]\", \"Adresse complete : [complete_address]\", \"Ville du logement : [city]\"];\n\nconst TemplateEdit = () => {\n  const classes = useStyles();\n  let {\n    idTemplate\n  } = useParams();\n  const [template, setTemplate] = useState({});\n\n  function getTemplate() {\n    console.log(\"idTemplate\", idTemplate);\n    getTemplateByIdAPI(idTemplate, response => {\n      console.log(\"response\", response);\n    });\n  }\n\n  function handleChange() {}\n\n  useEffect(() => {\n    getTemplate();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Ici tu peux modifier le texte de tes fichiers \\xE0 exporter. Pour ajouter un champs variable tel que l'addresse ou le nom de la personne r\\xE9f\\xE8re toi \\xE0 la liste ci dessous.\")), matching.map(value => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 3,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, value))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"textBody\",\n    size: \"small\",\n    fullWidth: true,\n    label: \"Text body\",\n    type: \"text\",\n    onChange: handleChange,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Preview\")));\n};\n\nexport default TemplateEdit;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/Macron business/src/views/Settings/Components/TemplateEdit.js"],"names":["React","useState","useEffect","makeStyles","withStyles","func","Typography","Grid","TextField","Button","getTemplateByIdAPI","updateTemplateAPI","useParams","Report","useStyles","theme","root","padding","spacing","button","marginBottom","title","cellRight","textAlign","paddingRight","matching","TemplateEdit","classes","idTemplate","template","setTemplate","getTemplate","console","log","response","handleChange","map","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { func } from \"prop-types\";\nimport { Typography, Grid, TextField, Button } from \"@material-ui/core\";\nimport { getTemplateByIdAPI, updateTemplateAPI } from \"request/settingsAPI\";\nimport { useParams } from \"react-router-dom\";\nimport { Report } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(6),\n  },\n  button: {\n    marginBottom: 30,\n  },\n  title: {\n    marginBottom: 10,\n  },\n  cellRight: {\n    textAlign: \"right\",\n    paddingRight: 25,\n  },\n}));\n\nconst matching = [\n  \"Nom du locataire : [name_rental]\",\n  \"Civilité du locataire : [civility]\",\n  \"Adresse complete : [complete_address]\",\n  \"Ville du logement : [city]\",\n];\n\nconst TemplateEdit = () => {\n  const classes = useStyles();\n  let { idTemplate } = useParams();\n  const [template, setTemplate] = useState({});\n\n  function getTemplate() {\n    console.log(\"idTemplate\", idTemplate);\n    getTemplateByIdAPI(idTemplate, (response) => {\n      console.log(\"response\", response);\n    });\n  }\n\n  function handleChange() {}\n\n  useEffect(() => {\n    getTemplate();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={5}>\n        <Grid item lg={12} md={12} xs={12}>\n          <Typography variant=\"subtitle1\">\n            Ici tu peux modifier le texte de tes fichiers à exporter. Pour\n            ajouter un champs variable tel que l'addresse ou le nom de la\n            personne réfère toi à la liste ci dessous.\n          </Typography>\n        </Grid>\n        {matching.map((value) => (\n          <Grid item lg={3} md={3} xs={3}>\n            <Typography variant=\"subtitle1\">{value}</Typography>\n          </Grid>\n        ))}\n\n        <Grid item lg={6} md={6} xs={6}>\n          <TextField\n            name=\"textBody\"\n            size=\"small\"\n            fullWidth\n            label=\"Text body\"\n            type=\"text\"\n            onChange={handleChange}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item lg={6} md={6} xs={6}>\n          Preview\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default TemplateEdit;\n"]},"metadata":{},"sourceType":"module"}