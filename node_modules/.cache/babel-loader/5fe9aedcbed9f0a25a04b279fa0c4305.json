{"ast":null,"code":"import Firebase from\"firebase\";export var saveNewAccommodation=function saveNewAccommodation(accomodation,id,ownerId){var existingUser=JSON.parse(localStorage.getItem(\"logged_user\"));Firebase.database().ref(existingUser+\"/accomodations/\"+id).set({id:id,loyer:accomodation.loyer,rental:accomodation.rental,address:accomodation.address,isCommercial:accomodation.isCommercial,owner:ownerId});};export var deleteValueInDataBase=function deleteValueInDataBase(type,soustype,index){Firebase.database().ref(\"/stock/componentsStock/\".concat(type,\"/\").concat(soustype,\"/\").concat(index)).set(null);console.log(\"DATA SAVED\");};export var updateAccomodation=function updateAccomodation(value){var existingUser=JSON.parse(localStorage.getItem(\"logged_user\"));Firebase.database().ref(\"/\".concat(existingUser,\"/accomodations/\").concat(value.id)).set(value);console.log(\"DATA SAVED\");};export var getAccomodationByOwner=function getAccomodationByOwner(ownerID,callback){var existingUser=JSON.parse(localStorage.getItem(\"logged_user\"));var ref=Firebase.database().ref(existingUser+\"/accomodations\");ref.orderByChild(\"owner\").equalTo(ownerID).on(\"value\",function(snapshot){var data=snapshot.val();callback(data);});};","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/Macron business/src/request/accomodationAPI.js"],"names":["Firebase","saveNewAccommodation","accomodation","id","ownerId","existingUser","JSON","parse","localStorage","getItem","database","ref","set","loyer","rental","address","isCommercial","owner","deleteValueInDataBase","type","soustype","index","console","log","updateAccomodation","value","getAccomodationByOwner","ownerID","callback","orderByChild","equalTo","on","snapshot","data","val"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,UAArB,CAEA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,YAAD,CAAeC,EAAf,CAAmBC,OAAnB,CAA+B,CACjE,GAAMC,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAArB,CACAT,QAAQ,CAACU,QAAT,GACGC,GADH,CACON,YAAY,CAAG,iBAAf,CAAmCF,EAD1C,EAEGS,GAFH,CAEO,CACHT,EAAE,CAAEA,EADD,CAEHU,KAAK,CAAEX,YAAY,CAACW,KAFjB,CAGHC,MAAM,CAAEZ,YAAY,CAACY,MAHlB,CAIHC,OAAO,CAAEb,YAAY,CAACa,OAJnB,CAKHC,YAAY,CAAEd,YAAY,CAACc,YALxB,CAMHC,KAAK,CAAEb,OANJ,CAFP,EAUD,CAZM,CAcP,MAAO,IAAMc,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,IAAD,CAAOC,QAAP,CAAiBC,KAAjB,CAA2B,CAC9DrB,QAAQ,CAACU,QAAT,GACGC,GADH,kCACiCQ,IADjC,aACyCC,QADzC,aACqDC,KADrD,GAEGT,GAFH,CAEO,IAFP,EAGAU,OAAO,CAACC,GAAR,CAAY,YAAZ,EACD,CALM,CAOP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CAC3C,GAAMpB,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAArB,CACAT,QAAQ,CAACU,QAAT,GACGC,GADH,YACWN,YADX,2BACyCoB,KAAK,CAACtB,EAD/C,GAEGS,GAFH,CAEOa,KAFP,EAGAH,OAAO,CAACC,GAAR,CAAY,YAAZ,EACD,CANM,CAQP,MAAO,IAAMG,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,OAAD,CAAUC,QAAV,CAAuB,CAC3D,GAAMvB,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAArB,CACA,GAAIE,CAAAA,GAAG,CAAGX,QAAQ,CAACU,QAAT,GAAoBC,GAApB,CAAwBN,YAAY,CAAE,gBAAtC,CAAV,CACAM,GAAG,CACAkB,YADH,CACgB,OADhB,EAEGC,OAFH,CAEWH,OAFX,EAGGI,EAHH,CAGM,OAHN,CAGe,SAACC,QAAD,CAAc,CACzB,GAAMC,CAAAA,IAAI,CAAGD,QAAQ,CAACE,GAAT,EAAb,CACAN,QAAQ,CAACK,IAAD,CAAR,CACD,CANH,EAOD,CAVM","sourcesContent":["import Firebase from \"firebase\";\n\nexport const saveNewAccommodation = (accomodation, id, ownerId) => {\n  const existingUser = JSON.parse(localStorage.getItem(\"logged_user\"));\n  Firebase.database()\n    .ref(existingUser + \"/accomodations/\" + id)\n    .set({\n      id: id,\n      loyer: accomodation.loyer,\n      rental: accomodation.rental,\n      address: accomodation.address,\n      isCommercial: accomodation.isCommercial,\n      owner: ownerId,\n    });\n};\n\nexport const deleteValueInDataBase = (type, soustype, index) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}/${index}`)\n    .set(null);\n  console.log(\"DATA SAVED\");\n};\n\nexport const updateAccomodation = (value) => {\n  const existingUser = JSON.parse(localStorage.getItem(\"logged_user\"));\n  Firebase.database()\n    .ref(`/${existingUser}/accomodations/${value.id}`)\n    .set(value);\n  console.log(\"DATA SAVED\");\n};\n\nexport const getAccomodationByOwner = (ownerID, callback) => {\n  const existingUser = JSON.parse(localStorage.getItem(\"logged_user\"));\n  let ref = Firebase.database().ref(existingUser +\"/accomodations\");\n  ref\n    .orderByChild(\"owner\")\n    .equalTo(ownerID)\n    .on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      callback(data);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}