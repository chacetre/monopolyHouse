{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStock/TableStockComponent.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { Card, CardActions, CardContent, Avatar, IconButton, Table, TableBody, TableCell, TableHead, TableRow, TableContainer, CardHeader, Grid, Button, TextField } from \"@material-ui/core\";\nimport EditRounded from \"@material-ui/icons/EditRounded\";\nimport SaveRounded from \"@material-ui/icons/SaveRounded\";\nimport StockInfo from \"./StockInfo\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  container: {\n    maxHeight: 740\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nconst TableStockComponent = props => {\n  const {\n    className,\n    listTable,\n    nameParent,\n    isModifyNSave,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [componentInfo, setComponentInfo] = useState({});\n  const sizeGrid = 12 / Object.keys(listTable).length;\n  useEffect(() => {\n    console.log(\"component tableGE\", listTable);\n\n    if (listTable !== undefined) {\n      const index = Object.keys(listTable).findIndex(p => p.attr1 == \"typeAvailable\");\n      Object.keys(listTable).slice(index);\n      console.log(\"size list\", listTable);\n      setComponentInfo(listTable);\n    }\n  }, [listTable]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, Object.keys(componentInfo).map((keyName, i) => /*#__PURE__*/React.createElement(React.Fragment, null, keyName !== \"typeAvailable\" && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: sizeGrid === 12 ? 6 : sizeGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StockInfo, {\n    groupComponents: Object.values(componentInfo[keyName]),\n    nameGroup: keyName,\n    nameParent: nameParent,\n    isModifyNSave: isModifyNSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \" Ajouter un nouvel \\xE9l\\xE9ment\")));\n};\n\nTableStockComponent.propTypes = {\n  className: PropTypes.string,\n  listTable: PropTypes.object\n};\nexport default TableStockComponent;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStock/TableStockComponent.js"],"names":["React","useEffect","useState","PropTypes","clsx","makeStyles","withStyles","Card","CardActions","CardContent","Avatar","IconButton","Table","TableBody","TableCell","TableHead","TableRow","TableContainer","CardHeader","Grid","Button","TextField","EditRounded","SaveRounded","StockInfo","useStyles","theme","root","row","height","display","alignItems","marginTop","spacing","spacer","flexGrow","importButton","marginRight","exportButton","searchInput","container","maxHeight","headerTitle","paddingBottom","justifyContent","StyledTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","background","default","TableStockComponent","props","className","listTable","nameParent","isModifyNSave","rest","classes","componentInfo","setComponentInfo","sizeGrid","Object","keys","length","console","log","undefined","index","findIndex","p","attr1","slice","map","keyName","i","values","propTypes","string","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableContainer,\n  CardHeader,\n  Grid,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport EditRounded from \"@material-ui/icons/EditRounded\";\nimport SaveRounded from \"@material-ui/icons/SaveRounded\";\nimport StockInfo from \"./StockInfo\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1),\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  importButton: {\n    marginRight: theme.spacing(1),\n  },\n  exportButton: {\n    marginRight: theme.spacing(1),\n  },\n  searchInput: {\n    marginRight: theme.spacing(1),\n  },\n  container: {\n    maxHeight: 740,\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst TableStockComponent = (props) => {\n  const { className, listTable, nameParent, isModifyNSave, ...rest } = props;\n\n  const classes = useStyles();\n  const [componentInfo, setComponentInfo] = useState({});\n  const sizeGrid = 12 / Object.keys(listTable).length;\n\n  useEffect(() => {\n    console.log(\"component tableGE\", listTable);\n    if (listTable !== undefined) {\n      const index = Object.keys(listTable).findIndex(\n        (p) => p.attr1 == \"typeAvailable\"\n      );\n      Object.keys(listTable).slice(index);\n      console.log(\"size list\", listTable);\n      setComponentInfo(listTable);\n    }\n  }, [listTable]);\n\n  return (\n    <Grid container spacing={3}>\n      {Object.keys(componentInfo).map((keyName, i) => (\n        <>\n          {keyName !== \"typeAvailable\" && (\n            <Grid item xs={sizeGrid === 12 ? 6 : sizeGrid}>\n              <StockInfo\n                groupComponents={Object.values(componentInfo[keyName])}\n                nameGroup={keyName}\n                nameParent={nameParent}\n                isModifyNSave={isModifyNSave}\n              />\n            </Grid>\n          )}\n        </>\n      ))}\n      <Grid item xs={1}>\n        <Button variant=\"outlined\"> Ajouter un nouvel élément</Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nTableStockComponent.propTypes = {\n  className: PropTypes.string,\n  listTable: PropTypes.object,\n};\n\nexport default TableStockComponent;\n"]},"metadata":{},"sourceType":"module"}