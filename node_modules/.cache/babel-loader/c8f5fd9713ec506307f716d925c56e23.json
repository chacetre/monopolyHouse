{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStock/TableStockComponent.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport AddRounded from \"@material-ui/icons/AddRounded\";\nimport StockInfo from \"./StockInfo\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  container: {\n    maxHeight: 740\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\n\nconst TableStockComponent = props => {\n  const {\n    className,\n    listTable,\n    nameParent,\n    isModifyNSave,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [componentInfo, setComponentInfo] = useState({});\n  const sizeGrid = 12 / (Object.keys(listTable).length - 1);\n  const [openAddElement, setOpenAddElement] = useState(false);\n\n  function addElement() {}\n\n  useEffect(() => {\n    console.log(\"component tableGE\", listTable);\n\n    if (listTable !== undefined) {\n      const index = Object.keys(listTable).findIndex(p => p.attr1 == \"typeAvailable\");\n      Object.keys(listTable).slice(index);\n      console.log(\"size list\", listTable);\n      setComponentInfo(listTable);\n    }\n  }, [listTable]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, Object.keys(componentInfo).map((keyName, i) => /*#__PURE__*/React.createElement(React.Fragment, null, keyName !== \"typeAvailable\" && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: sizeGrid === 12 ? 6 : sizeGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StockInfo, {\n    groupComponents: Object.values(componentInfo[keyName]),\n    nameGroup: keyName,\n    nameParent: nameParent,\n    isModifyNSave: isModifyNSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }))));\n};\n\nTableStockComponent.propTypes = {\n  className: PropTypes.string,\n  listTable: PropTypes.object\n};\nexport default TableStockComponent;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStock/TableStockComponent.js"],"names":["React","useEffect","useState","PropTypes","clsx","makeStyles","withStyles","Grid","Button","AddRounded","StockInfo","useStyles","theme","root","row","height","display","alignItems","marginTop","spacing","spacer","flexGrow","importButton","marginRight","exportButton","searchInput","container","maxHeight","headerTitle","paddingBottom","justifyContent","TableStockComponent","props","className","listTable","nameParent","isModifyNSave","rest","classes","componentInfo","setComponentInfo","sizeGrid","Object","keys","length","openAddElement","setOpenAddElement","addElement","console","log","undefined","index","findIndex","p","attr1","slice","map","keyName","i","values","propTypes","string","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\n\nimport AddRounded from \"@material-ui/icons/AddRounded\";\nimport StockInfo from \"./StockInfo\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1),\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  importButton: {\n    marginRight: theme.spacing(1),\n  },\n  exportButton: {\n    marginRight: theme.spacing(1),\n  },\n  searchInput: {\n    marginRight: theme.spacing(1),\n  },\n  container: {\n    maxHeight: 740,\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst TableStockComponent = (props) => {\n  const { className, listTable, nameParent, isModifyNSave, ...rest } = props;\n\n  const classes = useStyles();\n  const [componentInfo, setComponentInfo] = useState({});\n  const sizeGrid = 12 / (Object.keys(listTable).length - 1);\n  const [openAddElement, setOpenAddElement] = useState(false);\n\n\n  function addElement(){\n\n  }\n\n  useEffect(() => {\n    console.log(\"component tableGE\", listTable);\n    if (listTable !== undefined) {\n      const index = Object.keys(listTable).findIndex(\n        (p) => p.attr1 == \"typeAvailable\"\n      );\n      Object.keys(listTable).slice(index);\n      console.log(\"size list\", listTable);\n      setComponentInfo(listTable);\n    }\n  }, [listTable]);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={11}>\n        <Grid container spacing={3}>\n          {Object.keys(componentInfo).map((keyName, i) => (\n            <>\n              {keyName !== \"typeAvailable\" && (\n                <Grid item xs={sizeGrid === 12 ? 6 : sizeGrid}>\n                  <StockInfo\n                    groupComponents={Object.values(componentInfo[keyName])}\n                    nameGroup={keyName}\n                    nameParent={nameParent}\n                    isModifyNSave={isModifyNSave}\n                  />\n                </Grid>\n              )}\n            </>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={1}>\n        <Button variant=\"contained\" color=\"secondary\">\n          <AddRounded />\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nTableStockComponent.propTypes = {\n  className: PropTypes.string,\n  listTable: PropTypes.object,\n};\n\nexport default TableStockComponent;\n"]},"metadata":{},"sourceType":"module"}