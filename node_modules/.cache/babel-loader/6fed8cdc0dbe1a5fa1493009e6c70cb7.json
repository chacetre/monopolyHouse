{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/Macron business/src/components/PrivateRoute/index.js\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../../context/auth\";\nimport firebase from \"firebase/app\";\n\nconst PrivateRoute = props => {\n  const {\n    layout: Layout,\n    component: Component,\n    ...rest\n  } = props;\n  const {\n    authTokens\n  } = useAuth();\n\n  function verifyToken(token) {\n    console.log('token', token);\n    firebase.auth().signInWithCustomToken(token).then(userCredential => {\n      // Signed in\n      var user = userCredential.user;\n      return true;\n    }).catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      return false;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: matchProps => verifyToken(authTokens) ? /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, matchProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }))) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }));\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/Macron business/src/components/PrivateRoute/index.js"],"names":["React","Route","PropTypes","Redirect","useAuth","firebase","PrivateRoute","props","layout","Layout","component","Component","rest","authTokens","verifyToken","token","console","log","auth","signInWithCustomToken","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","matchProps","propTypes","any","isRequired","path","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,cAArB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,MAAM,EAAEC,MAAV;AAAkBC,IAAAA,SAAS,EAAEC,SAA7B;AAAwC,OAAGC;AAA3C,MAAoDL,KAA1D;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAiBT,OAAO,EAA9B;;AAEA,WAASU,WAAT,CAAqBC,KAArB,EAA4B;AAE1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACAV,IAAAA,QAAQ,CACLa,IADH,GAEGC,qBAFH,CAEyBJ,KAFzB,EAGGK,IAHH,CAGSC,cAAD,IAAoB;AACxB;AACA,UAAIC,IAAI,GAAGD,cAAc,CAACC,IAA1B;AACA,aAAO,IAAP;AACD,KAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChB,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;AACA,aAAO,KAAP;AACD,KAZH;AAaD;;AACD,sBACE,oBAAC,KAAD,oBACMhB,IADN;AAEE,IAAA,MAAM,EAAGiB,UAAD,IACNf,WAAW,CAACD,UAAD,CAAX,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,oBAAegB,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,gBAKE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CAnCD;;AAqCAvB,YAAY,CAACwB,SAAb,GAAyB;AACvBpB,EAAAA,SAAS,EAAER,SAAS,CAAC6B,GAAV,CAAcC,UADF;AAEvBxB,EAAAA,MAAM,EAAEN,SAAS,CAAC6B,GAAV,CAAcC,UAFC;AAGvBC,EAAAA,IAAI,EAAE/B,SAAS,CAACgC;AAHO,CAAzB;AAMA,eAAe5B,YAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../../context/auth\";\nimport firebase from \"firebase/app\";\n\nconst PrivateRoute = (props) => {\n  const { layout: Layout, component: Component, ...rest } = props;\n  const { authTokens } = useAuth();\n\n  function verifyToken(token) {\n\n    console.log('token', token)\n    firebase\n      .auth()\n      .signInWithCustomToken(token)\n      .then((userCredential) => {\n        // Signed in\n        var user = userCredential.user;\n        return true\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        return false\n      });\n  }\n  return (\n    <Route\n      {...rest}\n      render={(matchProps) =>\n        verifyToken(authTokens) ? (\n          <Layout>\n            <Component {...matchProps} />\n          </Layout>\n        ) : (\n          <Redirect to=\"/sign-in\" />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string,\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}