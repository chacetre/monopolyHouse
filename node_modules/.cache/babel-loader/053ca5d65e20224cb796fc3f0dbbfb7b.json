{"ast":null,"code":"import Firebase from \"firebase\";\nexport const saveStockSousTypeInDataBase = (type, soustype, stock) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}`).set(stock);\n  console.log(\"DATA SAVED\");\n};\nexport const saveNewComponentInDataBase = (type, value, indexTypeAvailable) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}`).set({\n    [type]: ['NULL']\n  });\n  Firebase.database().ref(`/stock/componentsStock/${type}/typeAvailable/0`).set(type);\n  Firebase.database().ref(`/stock/componentsAvailable/${indexTypeAvailable}`).set(type);\n};\nexport const deleteValueInDataBase = (type, soustype, index) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}/${index}`).set(null);\n  console.log(\"DATA SAVED\");\n};\nexport const saveNewValueInDataBase = (type, soustype, value, index) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}/${index}`).set(value);\n  console.log(\"DATA SAVED\");\n};\nexport const saveNewSousTypeInDataBase = (type, soustype, indexTypeAvailable) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/typeAvailable/${indexTypeAvailable}`).set(soustype);\n  saveNewValueInDataBase(type, soustype, \"null\", 0);\n  console.log(\"DATA SAVED\");\n};\nexport const updateStockAfterAddPedals = (path, value) => {\n  Firebase.database().ref(`/stock/componentsStock/${path}/stock`).set(value);\n  console.log(\"DATA SAVED\");\n};\nexport const getStockDataBase = callback => {\n  let ref = Firebase.database().ref(\"/stock\");\n  ref.on(\"value\", snapshot => {\n    const data = snapshot.val();\n    console.log(\"stock API\", data);\n    callback(data);\n  });\n};","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/request/stockAPI.js"],"names":["Firebase","saveStockSousTypeInDataBase","type","soustype","stock","database","ref","set","console","log","saveNewComponentInDataBase","value","indexTypeAvailable","deleteValueInDataBase","index","saveNewValueInDataBase","saveNewSousTypeInDataBase","updateStockAfterAddPedals","path","getStockDataBase","callback","on","snapshot","data","val"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,2BAA2B,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,KAA2B;AACpEJ,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,IAAGC,QAAS,EADlD,EAEGI,GAFH,CAEOH,KAFP;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMC,0BAA0B,GAAG,CAACR,IAAD,EAAOS,KAAP,EAAcC,kBAAd,KAAqC;AAC7EZ,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,EADtC,EAEGK,GAFH,CAEO;AAAE,KAACL,IAAD,GAAQ,CAAC,MAAD;AAAV,GAFP;AAIAF,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,kBADtC,EAEGK,GAFH,CAEOL,IAFP;AAIAF,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,8BAA6BM,kBAAmB,EADxD,EAEGL,GAFH,CAEOL,IAFP;AAGD,CAZM;AAcP,OAAO,MAAMW,qBAAqB,GAAG,CAACX,IAAD,EAAOC,QAAP,EAAiBW,KAAjB,KAA2B;AAC9Dd,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,IAAGC,QAAS,IAAGW,KAAM,EAD3D,EAEGP,GAFH,CAEO,IAFP;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAQP,OAAO,MAAMM,sBAAsB,GAAG,CAACb,IAAD,EAAOC,QAAP,EAAiBQ,KAAjB,EAAwBG,KAAxB,KAAkC;AACtEd,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,IAAGC,QAAS,IAAGW,KAAM,EAD3D,EAEGP,GAFH,CAEOI,KAFP;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMO,yBAAyB,GAAG,CACvCd,IADuC,EAEvCC,QAFuC,EAGvCS,kBAHuC,KAIpC;AACHZ,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBJ,IAAK,kBAAiBU,kBAAmB,EAD1E,EAEGL,GAFH,CAEOJ,QAFP;AAGAY,EAAAA,sBAAsB,CAACb,IAAD,EAAOC,QAAP,EAAiB,MAAjB,EAAyB,CAAzB,CAAtB;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CAXM;AAaP,OAAO,MAAMQ,yBAAyB,GAAG,CAACC,IAAD,EAAOP,KAAP,KAAiB;AACxDX,EAAAA,QAAQ,CAACK,QAAT,GACGC,GADH,CACQ,0BAAyBY,IAAK,QADtC,EAEGX,GAFH,CAEOI,KAFP;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMU,gBAAgB,GAAIC,QAAD,IAAc;AAC5C,MAAId,GAAG,GAAGN,QAAQ,CAACK,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,CAAV;AACAA,EAAAA,GAAG,CAACe,EAAJ,CAAO,OAAP,EAAiBC,QAAD,IAAc;AAC5B,UAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBc,IAAzB;AACAH,IAAAA,QAAQ,CAACG,IAAD,CAAR;AACD,GAJD;AAKD,CAPM","sourcesContent":["import Firebase from \"firebase\";\n\nexport const saveStockSousTypeInDataBase = (type, soustype, stock) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}`)\n    .set(stock);\n  console.log(\"DATA SAVED\");\n};\n\nexport const saveNewComponentInDataBase = (type, value, indexTypeAvailable) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}`)\n    .set({ [type]: ['NULL'] });\n\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/typeAvailable/0`)\n    .set(type);\n\n  Firebase.database()\n    .ref(`/stock/componentsAvailable/${indexTypeAvailable}`)\n    .set(type);\n};\n\nexport const deleteValueInDataBase = (type, soustype, index) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}/${index}`)\n    .set(null);\n  console.log(\"DATA SAVED\");\n};\n\n\nexport const saveNewValueInDataBase = (type, soustype, value, index) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}/${index}`)\n    .set(value);\n  console.log(\"DATA SAVED\");\n};\n\nexport const saveNewSousTypeInDataBase = (\n  type,\n  soustype,\n  indexTypeAvailable\n) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/typeAvailable/${indexTypeAvailable}`)\n    .set(soustype);\n  saveNewValueInDataBase(type, soustype, \"null\", 0);\n\n  console.log(\"DATA SAVED\");\n};\n\nexport const updateStockAfterAddPedals = (path, value) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${path}/stock`)\n    .set(value);\n  console.log(\"DATA SAVED\");\n};\n\nexport const getStockDataBase = (callback) => {\n  let ref = Firebase.database().ref(\"/stock\");\n  ref.on(\"value\", (snapshot) => {\n    const data = snapshot.val();\n    console.log(\"stock API\", data);\n    callback(data);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}