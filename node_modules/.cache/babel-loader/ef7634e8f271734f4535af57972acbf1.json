{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStock/StockInfo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { Card, CardContent, IconButton, Table, TableBody, TableCell, TableHead, TableRow, TableContainer, CardHeader, TextField } from \"@material-ui/core\";\nimport EditRounded from \"@material-ui/icons/EditRounded\";\nimport SaveRounded from \"@material-ui/icons/SaveRounded\";\nimport AddRounded from \"@material-ui/icons/AddRounded\";\nimport DeleteOutlineRounded from \"@material-ui/icons/DeleteOutlineRounded\";\nimport { saveNewElementDataBase, deleteValueInDataBase } from \"../../../../request/stockAPI\";\nimport NewValue from \"../AddElements/NewValueModal\";\nimport { red } from \"@material-ui/core/colors\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  container: {\n    maxHeight: 740\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nconst StockInfo = props => {\n  const {\n    className,\n    groupComponents,\n    nameGroup,\n    nameParent,\n    isModifyNSave,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [modify, setModify] = useState(false);\n  const [openNewValue, setOpenNewValue] = useState(false);\n  const [stockComponents, setStockComponents] = useState([]);\n\n  function handleModifyStock(event) {\n    event.persist();\n    setStockComponents(prevFormState => ({ ...prevFormState,\n      [event.target.id]: { ...prevFormState[event.target.id],\n        stock: event.target.value\n      }\n    }));\n    isModifyNSave(true);\n  }\n\n  function handleModify() {\n    setModify(true);\n  }\n\n  function handleSave() {\n    saveNewElementDataBase(nameParent, nameGroup, stockComponents);\n    setModify(false);\n    isModifyNSave(false);\n  }\n\n  function handleAddValue() {\n    setOpenNewValue(true);\n  }\n\n  function handleDelete(event, index) {\n    console.log(index);\n    deleteValueInDataBase(nameParent, nameGroup, index);\n  }\n\n  useEffect(() => {\n    if (groupComponents !== undefined) {\n      setStockComponents(groupComponents);\n    }\n  }, [groupComponents]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NewValue, {\n    component: {\n      name: nameParent,\n      type: nameGroup,\n      length: Object.values(stockComponents).length\n    },\n    onClose: color => {\n      setOpenNewValue(false);\n    },\n    open: openNewValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: nameGroup,\n    style: {\n      textAlign: \"center\"\n    },\n    action: /*#__PURE__*/React.createElement(React.Fragment, null, !modify && /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      onClick: handleModify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    })), modify && /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      onClick: handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SaveRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      onClick: handleAddValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AddRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, \"Valeur\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, \"Stock\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, Object.values(stockComponents).map((user, index) => /*#__PURE__*/React.createElement(StyledTableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, user.label), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    size: \"small\",\n    type: \"number\",\n    id: index,\n    onChange: handleModifyStock,\n    disabled: !modify,\n    value: user.stock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, modify && /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: event => handleDelete(event, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlineRounded, {\n    style: {\n      color: red[500]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 27\n    }\n  })))))))))));\n};\n\nStockInfo.propTypes = {\n  className: PropTypes.string,\n  groupComponents: PropTypes.object\n};\nexport default StockInfo;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStock/StockInfo.js"],"names":["React","useEffect","useState","PropTypes","clsx","makeStyles","withStyles","Card","CardContent","IconButton","Table","TableBody","TableCell","TableHead","TableRow","TableContainer","CardHeader","TextField","EditRounded","SaveRounded","AddRounded","DeleteOutlineRounded","saveNewElementDataBase","deleteValueInDataBase","NewValue","red","useStyles","theme","root","row","height","display","alignItems","marginTop","spacing","spacer","flexGrow","importButton","marginRight","exportButton","searchInput","container","maxHeight","headerTitle","paddingBottom","justifyContent","StyledTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","background","default","StockInfo","props","className","groupComponents","nameGroup","nameParent","isModifyNSave","rest","classes","modify","setModify","openNewValue","setOpenNewValue","stockComponents","setStockComponents","handleModifyStock","event","persist","prevFormState","target","id","stock","value","handleModify","handleSave","handleAddValue","handleDelete","index","console","log","undefined","name","type","length","Object","values","textAlign","content","map","user","label","propTypes","string","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableContainer,\n  CardHeader,\n  TextField,\n} from \"@material-ui/core\";\nimport EditRounded from \"@material-ui/icons/EditRounded\";\nimport SaveRounded from \"@material-ui/icons/SaveRounded\";\nimport AddRounded from \"@material-ui/icons/AddRounded\";\nimport DeleteOutlineRounded from \"@material-ui/icons/DeleteOutlineRounded\";\nimport { saveNewElementDataBase, deleteValueInDataBase } from \"../../../../request/stockAPI\";\nimport NewValue from \"../AddElements/NewValueModal\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1),\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  importButton: {\n    marginRight: theme.spacing(1),\n  },\n  exportButton: {\n    marginRight: theme.spacing(1),\n  },\n  searchInput: {\n    marginRight: theme.spacing(1),\n  },\n  container: {\n    maxHeight: 740,\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst StockInfo = (props) => {\n  const {\n    className,\n    groupComponents,\n    nameGroup,\n    nameParent,\n    isModifyNSave,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  const [modify, setModify] = useState(false);\n  const [openNewValue, setOpenNewValue] = useState(false);\n  const [stockComponents, setStockComponents] = useState([]);\n\n  function handleModifyStock(event) {\n    event.persist();\n    setStockComponents((prevFormState) => ({\n      ...prevFormState,\n      [event.target.id]: {\n        ...prevFormState[event.target.id],\n        stock: event.target.value,\n      },\n    }));\n\n    isModifyNSave(true);\n  }\n\n  function handleModify() {\n    setModify(true);\n  }\n\n  function handleSave() {\n    saveNewElementDataBase(nameParent, nameGroup, stockComponents);\n    setModify(false);\n    isModifyNSave(false);\n  }\n\n  function handleAddValue() {\n    setOpenNewValue(true);\n  }\n\n  function handleDelete(event, index){\n    console.log(index);\n    deleteValueInDataBase(nameParent, nameGroup, index)\n  }\n\n  useEffect(() => {\n    if (groupComponents !== undefined) {\n      setStockComponents(groupComponents);\n    }\n  }, [groupComponents]);\n  return (\n    <>\n      <NewValue\n        component={{\n          name: nameParent,\n          type: nameGroup,\n          length: Object.values(stockComponents).length,\n        }}\n        onClose={(color) => {\n          setOpenNewValue(false);\n        }}\n        open={openNewValue}\n      />\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <CardHeader\n          title={nameGroup}\n          style={{ textAlign: \"center\" }}\n          action={\n            <>\n              {!modify && (\n                <IconButton aria-label=\"settings\" onClick={handleModify}>\n                  <EditRounded />\n                </IconButton>\n              )}\n              {modify && (\n                <IconButton aria-label=\"settings\" onClick={handleSave}>\n                  <SaveRounded />\n                </IconButton>\n              )}\n              <IconButton aria-label=\"settings\" onClick={handleAddValue}>\n                <AddRounded />\n              </IconButton>\n            </>\n          }\n        />\n        <CardContent className={classes.content}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Valeur</TableCell>\n                  <TableCell>Stock</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.values(stockComponents).map((user, index) => (\n                  <StyledTableRow>\n                    <StyledTableCell>{user.label}</StyledTableCell>\n                    <StyledTableCell>\n                      <TextField\n                        variant=\"outlined\"\n                        size=\"small\"\n                        type=\"number\"\n                        id={index}\n                        onChange={handleModifyStock}\n                        disabled={!modify}\n                        value={user.stock}\n                      />\n                    </StyledTableCell>\n\n                    <StyledTableCell>\n                      {modify && (\n                        <IconButton size=\"small\" onClick={(event) => handleDelete(event, index)}>\n                          <DeleteOutlineRounded style={{ color: red[500] }} />\n                        </IconButton>\n                      )}\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nStockInfo.propTypes = {\n  className: PropTypes.string,\n  groupComponents: PropTypes.object,\n};\n\nexport default StockInfo;\n"]},"metadata":{},"sourceType":"module"}