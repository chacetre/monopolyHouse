{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hook-pedal/src/views/Dashboard/components/UsersByDevice/UsersByDevice.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, IconButton, Divider, Typography } from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\nimport { getPedalsDataBase } from 'request/pedalsAPI';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst UsersByDevice = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [dataPedals, setDataPedals] = useState({});\n  const [pedalsList, setPedalsList] = useState([]);\n  const [data, setData] = useState({\n    datasets: [{\n      data: [63, 15, 22],\n      backgroundColor: [theme.palette.primary.main, theme.palette.error.main, theme.palette.warning.main],\n      borderWidth: 8,\n      borderColor: theme.palette.white,\n      hoverBorderColor: theme.palette.white\n    }],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  });\n\n  function formateData() {\n    Object.values(dataPedals).every(element => {\n      const scheme = {\n        title: element.title,\n        value: element.totalMade,\n        color: theme.palette.primary.main\n      };\n      setPedalsList(pedalsList.concat(scheme));\n    });\n  }\n\n  useEffect(() => {\n    formateData();\n  }, [dataPedals]);\n  useEffect(() => {\n    getPedalsDataBase(response => {\n      console.log('element', response);\n      setDataPedals(response);\n    });\n  }, []);\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n  const devices = [{\n    title: 'Desktop',\n    value: '63',\n    icon: /*#__PURE__*/React.createElement(LaptopMacIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.primary.main\n  }, {\n    title: 'Tablet',\n    value: '15',\n    icon: /*#__PURE__*/React.createElement(TabletMacIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.error.main\n  }, {\n    title: 'Mobile',\n    value: '23',\n    icon: /*#__PURE__*/React.createElement(PhoneIphoneIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.warning.main\n  }];\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    })),\n    title: \"Users By Device\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, pedalsList.map(pedal => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.device,\n    key: pedal.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, pedal.title), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: pedal.color\n    },\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, pedal.value))))));\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\nexport default UsersByDevice;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hook-pedal/src/views/Dashboard/components/UsersByDevice/UsersByDevice.js"],"names":["React","useEffect","useState","Doughnut","clsx","PropTypes","makeStyles","useTheme","Card","CardHeader","CardContent","IconButton","Divider","Typography","LaptopMacIcon","PhoneIphoneIcon","RefreshIcon","TabletMacIcon","getPedalsDataBase","useStyles","theme","root","height","chartContainer","position","stats","marginTop","spacing","display","justifyContent","device","textAlign","padding","deviceIcon","color","palette","icon","UsersByDevice","props","className","rest","classes","dataPedals","setDataPedals","pedalsList","setPedalsList","data","setData","datasets","backgroundColor","primary","main","error","warning","borderWidth","borderColor","white","hoverBorderColor","labels","formateData","Object","values","every","element","scheme","title","value","totalMade","concat","response","console","log","options","legend","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","tooltips","enabled","mode","intersect","divider","titleFontColor","text","bodyFontColor","secondary","footerFontColor","devices","map","pedal","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\nimport { getPedalsDataBase } from 'request/pedalsAPI';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst UsersByDevice = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [dataPedals, setDataPedals] = useState({});\n  const [pedalsList, setPedalsList] = useState([]);\n\n  const [data, setData] = useState({\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          theme.palette.primary.main,\n          theme.palette.error.main,\n          theme.palette.warning.main\n        ],\n        borderWidth: 8,\n        borderColor: theme.palette.white,\n        hoverBorderColor: theme.palette.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  });\n\n  function formateData() {\n    \n    Object.values(dataPedals).every(element => {\n      const scheme = {\n        title: element.title,\n        value: element.totalMade,\n        color: theme.palette.primary.main\n      };\n      setPedalsList(pedalsList.concat(scheme));\n    });\n  }\n\n  useEffect(() => {\n    formateData();\n  }, [dataPedals]);\n\n  useEffect(() => {\n    getPedalsDataBase(response => {\n      console.log('element', response);\n      setDataPedals(response);\n    });\n  }, []);\n\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: '63',\n      icon: <LaptopMacIcon />,\n      color: theme.palette.primary.main\n    },\n    {\n      title: 'Tablet',\n      value: '15',\n      icon: <TabletMacIcon />,\n      color: theme.palette.error.main\n    },\n    {\n      title: 'Mobile',\n      value: '23',\n      icon: <PhoneIphoneIcon />,\n      color: theme.palette.warning.main\n    }\n  ];\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader\n        action={\n          <IconButton size=\"small\">\n            <RefreshIcon />\n          </IconButton>\n        }\n        title=\"Users By Device\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Doughnut data={data} options={options} />\n        </div>\n        <div className={classes.stats}>\n          {pedalsList.map(pedal => (\n            <div className={classes.device} key={pedal.title}>\n              <Typography variant=\"body1\">{pedal.title}</Typography>\n              <Typography style={{ color: pedal.color }} variant=\"h2\">\n                {pedal.value}\n              </Typography>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersByDevice;\n"]},"metadata":{},"sourceType":"module"}