{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/Macron business/src/views/ChooseBoss/components/AddOwnerModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { Modal, Card, CardHeader, CardContent, CardActions, Grid, Divider, Typography, Radio, RadioGroup, FormControlLabel, MenuItem, Button, colors, Select, InputLabel } from \"@material-ui/core\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport TableSelector from \"./TableSelector\";\nimport { saveNewPedalsInDataBase } from \"../../../request/pedalsAPI\";\nimport { getStockDataBase } from \"../../../request/stockAPI\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    outline: \"none\",\n    boxShadow: theme.shadows[20],\n    width: \"60%\",\n    maxHeight: \"90%\",\n    overflowY: \"auto\",\n    maxWidth: \"100%\"\n  },\n  actions: {\n    justifyContent: \"flex-end\"\n  },\n  center: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  divider: {\n    margin: 10\n  }\n}));\n\nfunction AddOwnerModal({\n  open,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [componentCurrent, setComponentCurrent] = useState(\"aop\");\n  const [pedalCurrent, setPedalCurrent] = useState({});\n\n  function createProprio() {\n    const timestamp = Date.now();\n    firebase.database().ref(\"id_user/owners/\" + timestamp).set({\n      civility: \"mme\",\n      lastname: \"Macron\",\n      firstname: \"Valerie\",\n      isSociety: false,\n      socialIdentity: null,\n      id: timestamp,\n      isOwner: true\n    });\n    onClose();\n  }\n\n  const handleChange = (event, user, keyName) => {\n    event.persist();\n    console.log(\"event change\", event.target.value);\n    setPedalCurrent(prevFormState => ({ ...prevFormState,\n      components: { ...prevFormState.components,\n        [user.value]: {\n          label: user.label,\n          path: `${componentCurrent}/${keyName}/${user.value}`,\n          quantity: event.target.value >= 0 ? event.target.value : 0\n        }\n      }\n    }));\n  };\n\n  const cancelClose = () => {\n    onClose();\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: onClose,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Ajouter un nouveau propriÃ©taire\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"position\",\n    name: \"position\",\n    defaultValue: \"top\",\n    onChange: handleChangeParticulier,\n    className: classes.gridCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.titleSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Locataire(s):\"), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"true\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      checked: isParticulier === \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }),\n    label: \"Particulier\",\n    labelPlacement: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"false\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      checked: isParticulier === \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }),\n    label: \"Entreprise\",\n    labelPlacement: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    disableSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: cancelClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"annuler\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: createProprio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"cr\\xE9er\"))));\n}\n\nAddOwnerModal.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\nAddOwnerModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\nexport default AddOwnerModal;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/Macron business/src/views/ChooseBoss/components/AddOwnerModal.js"],"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","withStyles","Modal","Card","CardHeader","CardContent","CardActions","Grid","Divider","Typography","Radio","RadioGroup","FormControlLabel","MenuItem","Button","colors","Select","InputLabel","ToggleButton","ToggleButtonGroup","TableSelector","saveNewPedalsInDataBase","getStockDataBase","useStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","actions","justifyContent","center","display","alignItems","divider","margin","AddOwnerModal","open","className","rest","classes","componentCurrent","setComponentCurrent","pedalCurrent","setPedalCurrent","createProprio","timestamp","Date","now","firebase","database","ref","set","civility","lastname","firstname","isSociety","socialIdentity","id","isOwner","onClose","handleChange","event","user","keyName","persist","console","log","target","value","prevFormState","components","label","path","quantity","cancelClose","handleChangeParticulier","gridCell","titleSection","isParticulier","propTypes","string","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  Typography,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  MenuItem,\n  Button,\n  colors,\n  Select,\n  InputLabel,\n} from \"@material-ui/core\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport TableSelector from \"./TableSelector\";\nimport { saveNewPedalsInDataBase } from \"../../../request/pedalsAPI\";\nimport { getStockDataBase } from \"../../../request/stockAPI\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    outline: \"none\",\n    boxShadow: theme.shadows[20],\n    width: \"60%\",\n    maxHeight: \"90%\",\n    overflowY: \"auto\",\n    maxWidth: \"100%\",\n  },\n  actions: {\n    justifyContent: \"flex-end\",\n  },\n  center: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  divider: {\n    margin: 10,\n  },\n}));\n\nfunction AddOwnerModal({ open, className, ...rest }) {\n  const classes = useStyles();\n\n  const [componentCurrent, setComponentCurrent] = useState(\"aop\");\n  const [pedalCurrent, setPedalCurrent] = useState({});\n\n  function createProprio() {\n    const timestamp = Date.now();\n\n    firebase\n      .database()\n      .ref(\"id_user/owners/\" + timestamp)\n      .set({\n        civility: \"mme\",\n        lastname: \"Macron\",\n        firstname: \"Valerie\",\n        isSociety: false,\n        socialIdentity: null,\n        id: timestamp,\n        isOwner: true,\n      });\n\n    onClose();\n  }\n\n  const handleChange = (event, user, keyName) => {\n    event.persist();\n    console.log(\"event change\", event.target.value);\n    setPedalCurrent((prevFormState) => ({\n      ...prevFormState,\n      components: {\n        ...prevFormState.components,\n        [user.value]: {\n          label: user.label,\n          path: `${componentCurrent}/${keyName}/${user.value}`,\n          quantity: event.target.value >= 0 ? event.target.value : 0,\n        },\n      },\n    }));\n  };\n\n  const cancelClose = () => {\n    onClose();\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} open={open}>\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <CardHeader title={\"Ajouter un nouveau propriÃ©taire\"} />\n        <Divider />\n        <CardContent>\n          <RadioGroup\n            row\n            aria-label=\"position\"\n            name=\"position\"\n            defaultValue=\"top\"\n            onChange={handleChangeParticulier}\n            className={classes.gridCell}\n          >\n            <Typography variant=\"h4\" className={classes.titleSection}>\n              Locataire(s):\n            </Typography>\n            <FormControlLabel\n              value={\"true\"}\n              control={\n                <Radio color=\"primary\" checked={isParticulier === \"true\"} />\n              }\n              label=\"Particulier\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value={\"false\"}\n              control={\n                <Radio color=\"primary\" checked={isParticulier === \"false\"} />\n              }\n              label=\"Entreprise\"\n              labelPlacement=\"right\"\n            />\n          </RadioGroup>\n        </CardContent>\n        <Divider />\n        <CardActions disableSpacing>\n          <Button onClick={cancelClose}>annuler</Button>\n          <Button onClick={createProprio}>crÃ©er</Button>\n        </CardActions>\n      </Card>\n    </Modal>\n  );\n}\n\nAddOwnerModal.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n};\n\nAddOwnerModal.defaultProps = {\n  open: false,\n  onClose: () => {},\n};\n\nexport default AddOwnerModal;\n"]},"metadata":{},"sourceType":"module"}