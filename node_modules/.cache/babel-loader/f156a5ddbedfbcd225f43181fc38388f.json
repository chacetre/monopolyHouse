{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/Macron business/src/views/Settings/Components/TemplateEdit.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { func } from \"prop-types\";\nimport { Typography, Grid, TextField, Button, IconButton, InputLabel, MenuItem, FormControl, Select } from \"@material-ui/core\";\nimport { getTemplateByIdAPI, updateTemplateAPI } from \"request/settingsAPI\";\nimport { useParams } from \"react-router-dom\";\nimport { InfoRounded, Report } from \"@material-ui/icons\";\nimport { fakeAccomodation, fakeDate, fakeOwner } from \"../../../components/Constants/const\";\nimport TemplateGenerator from \"./TemplateGenerator\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(6)\n  },\n  button: {\n    marginBottom: 30\n  },\n  title: {\n    marginBottom: 10\n  },\n  cellCenter: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  cellRight: {\n    display: \"flex\",\n    alignItems: \"right\"\n  },\n  boxPreview: {\n    backgroundColor: theme.palette.white\n  }\n}));\nconst matching = [\"Nom du locataire : [name_rental]\", \"CivilitÃ© du locataire : [civility]\", \"Adresse complete : [complete_address]\", \"Ville du logement : [city]\"];\nconst whom = {\n  all: {\n    value: \"all\",\n    label: \"Tous le monde\"\n  },\n  particular: {\n    value: \"particular\",\n    label: \"Particulier\"\n  },\n  society: {\n    value: \"society\",\n    label: \"Entreprise\"\n  }\n};\nconst type = {\n  quittance: {\n    value: \"quittance\",\n    label: \"Quittance\"\n  },\n  moneyCall: {\n    value: \"moneyCall\",\n    label: \"Appel de loyer\"\n  }\n};\n\nconst TemplateEdit = () => {\n  const classes = useStyles();\n  let history = useHistory();\n  let {\n    idTemplate\n  } = useParams();\n  const [template, setTemplate] = useState({});\n\n  function getTemplate() {\n    console.log(\"idTemplate\", idTemplate);\n    getTemplateByIdAPI(idTemplate, response => {\n      console.log(\"response\", response);\n      setTemplate(response);\n    });\n  }\n\n  function handleChange(event) {\n    event.persist();\n    setTemplate(prev => ({ ...prev,\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function saveChange() {\n    updateTemplateAPI(idTemplate, template);\n    history.goBack();\n  }\n\n  useEffect(() => {\n    getTemplate();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Ici tu peux modifier le texte de tes fichiers \\xE0 exporter. Pour ajouter un champs variable tel que l'addresse ou le nom de la personne r\\xE9f\\xE8re toi \\xE0 la liste ci dessous.\"), matching.map(value => /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, value))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    size: \"small\",\n    fullWidth: true,\n    label: \"Nom du template\",\n    type: \"text\",\n    value: template.name || \"\",\n    onChange: handleChange,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Type de fichier\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    onChange: handleChange,\n    value: template.type || \"\",\n    name: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, Object.values(type).map(value => /*#__PURE__*/React.createElement(MenuItem, {\n    value: value.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }\n  }, value.label)))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \"Pour qui ?\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    onChange: handleChange,\n    value: template.whom || \"\",\n    name: \"whom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, Object.values(whom).map(value => /*#__PURE__*/React.createElement(MenuItem, {\n    value: value.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 23\n    }\n  }, value.label)))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    xs: 12,\n    className: classes.cellCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"textStart\",\n    size: \"small\",\n    multiline: true,\n    rows: 8,\n    fullWidth: true,\n    label: \"Object\",\n    type: \"text\",\n    value: template.textStart || \"\",\n    onChange: handleChange,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InfoRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    xs: 12,\n    className: classes.cellCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"textBody\",\n    size: \"small\",\n    multiline: true,\n    rows: 8,\n    fullWidth: true,\n    label: \"Text body\",\n    type: \"text\",\n    value: template.textBody || \"\",\n    onChange: handleChange,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InfoRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    xs: 12,\n    className: classes.cellCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"textEnd\",\n    size: \"small\",\n    multiline: true,\n    rows: 8,\n    fullWidth: true,\n    label: \"Post Scriptum\",\n    type: \"text\",\n    value: template.textEnd || \"\",\n    onChange: handleChange,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InfoRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    xs: 12,\n    className: classes.cellRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, \"Annuler\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: saveChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, \"Valider\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    xs: 6,\n    className: classes.boxPreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TemplateGenerator, {\n    accomodation: fakeAccomodation,\n    owner: fakeOwner,\n    date: fakeDate,\n    template: template,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default TemplateEdit;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/Macron business/src/views/Settings/Components/TemplateEdit.js"],"names":["React","useState","useEffect","useHistory","makeStyles","withStyles","func","Typography","Grid","TextField","Button","IconButton","InputLabel","MenuItem","FormControl","Select","getTemplateByIdAPI","updateTemplateAPI","useParams","InfoRounded","Report","fakeAccomodation","fakeDate","fakeOwner","TemplateGenerator","useStyles","theme","root","padding","spacing","button","marginBottom","title","cellCenter","display","alignItems","cellRight","boxPreview","backgroundColor","palette","white","matching","whom","all","value","label","particular","society","type","quittance","moneyCall","TemplateEdit","classes","history","idTemplate","template","setTemplate","getTemplate","console","log","response","handleChange","event","persist","prev","target","name","saveChange","goBack","map","formControl","Object","values","textStart","textBody","textEnd","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { func } from \"prop-types\";\nimport {\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n} from \"@material-ui/core\";\nimport { getTemplateByIdAPI, updateTemplateAPI } from \"request/settingsAPI\";\nimport { useParams } from \"react-router-dom\";\nimport { InfoRounded, Report } from \"@material-ui/icons\";\nimport {\n  fakeAccomodation,\n  fakeDate,\n  fakeOwner,\n} from \"../../../components/Constants/const\";\nimport TemplateGenerator from \"./TemplateGenerator\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(6),\n  },\n  button: {\n    marginBottom: 30,\n  },\n  title: {\n    marginBottom: 10,\n  },\n  cellCenter: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  cellRight: {\n    display: \"flex\",\n    alignItems: \"right\",\n  },\n  boxPreview: {\n    backgroundColor: theme.palette.white,\n  },\n}));\n\nconst matching = [\n  \"Nom du locataire : [name_rental]\",\n  \"CivilitÃ© du locataire : [civility]\",\n  \"Adresse complete : [complete_address]\",\n  \"Ville du logement : [city]\",\n];\n\nconst whom = {\n  all: {\n    value: \"all\",\n    label: \"Tous le monde\",\n  },\n  particular: {\n    value: \"particular\",\n    label: \"Particulier\",\n  },\n  society: {\n    value: \"society\",\n    label: \"Entreprise\",\n  },\n};\n\nconst type = {\n  quittance: {\n    value: \"quittance\",\n    label: \"Quittance\",\n  },\n  moneyCall: {\n    value: \"moneyCall\",\n    label: \"Appel de loyer\",\n  },\n};\n\nconst TemplateEdit = () => {\n  const classes = useStyles();\n  let history = useHistory();\n  let { idTemplate } = useParams();\n  const [template, setTemplate] = useState({});\n\n  function getTemplate() {\n    console.log(\"idTemplate\", idTemplate);\n    getTemplateByIdAPI(idTemplate, (response) => {\n      console.log(\"response\", response);\n      setTemplate(response);\n    });\n  }\n\n  function handleChange(event) {\n    event.persist();\n\n    setTemplate((prev) => ({\n      ...prev,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  function saveChange() {\n    updateTemplateAPI(idTemplate, template);\n    history.goBack();\n  }\n\n  useEffect(() => {\n    getTemplate();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={10}>\n        <Grid item lg={12} md={12} xs={12}>\n          <Typography variant=\"subtitle1\">\n            Ici tu peux modifier le texte de tes fichiers Ã  exporter. Pour\n            ajouter un champs variable tel que l'addresse ou le nom de la\n            personne rÃ©fÃ¨re toi Ã  la liste ci dessous.\n          </Typography>\n          {matching.map((value) => (\n            <Typography variant=\"subtitle1\">{value}</Typography>\n          ))}\n        </Grid>\n\n        <Grid item lg={6} md={6} xs={6}>\n          <Grid container spacing={2}>\n            <Grid item lg={12} md={12} xs={12}>\n              <TextField\n                name=\"name\"\n                size=\"small\"\n                fullWidth\n                label=\"Nom du template\"\n                type=\"text\"\n                value={template.name || \"\"}\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item lg={6} md={6} xs={6}>\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Type de fichier\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  onChange={handleChange}\n                  value={template.type || \"\"}\n                  name=\"type\"\n                >\n                  {Object.values(type).map((value) => (\n                    <MenuItem value={value.value}>\n                      <em>{value.label}</em>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item lg={6} md={6} xs={6}>\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Pour qui ?\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  onChange={handleChange}\n                  value={template.whom || \"\"}\n                  name=\"whom\"\n                >\n                  {Object.values(whom).map((value) => (\n                    <MenuItem value={value.value}>\n                      <em>{value.label}</em>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item lg={12} md={12} xs={12} className={classes.cellCenter}>\n              <TextField\n                name=\"textStart\"\n                size=\"small\"\n                multiline\n                rows={8}\n                fullWidth\n                label=\"Object\"\n                type=\"text\"\n                value={template.textStart || \"\"}\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n              <IconButton>\n                <InfoRounded />\n              </IconButton>\n            </Grid>\n            <Grid item lg={12} md={12} xs={12} className={classes.cellCenter}>\n              <TextField\n                name=\"textBody\"\n                size=\"small\"\n                multiline\n                rows={8}\n                fullWidth\n                label=\"Text body\"\n                type=\"text\"\n                value={template.textBody || \"\"}\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n              <IconButton>\n                <InfoRounded />\n              </IconButton>\n            </Grid>\n            <Grid item lg={12} md={12} xs={12} className={classes.cellCenter}>\n              <TextField\n                name=\"textEnd\"\n                size=\"small\"\n                multiline\n                rows={8}\n                fullWidth\n                label=\"Post Scriptum\"\n                type=\"text\"\n                value={template.textEnd || \"\"}\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n              <IconButton>\n                <InfoRounded />\n              </IconButton>\n            </Grid>\n            <Grid item lg={12} md={12} xs={12} className={classes.cellRight}>\n              <Button variant=\"outlined\" style={{marginRight : 10}}>Annuler</Button>\n              <Button variant=\"contained\" onClick={saveChange}>\n                Valider\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={6} md={6} xs={6} className={classes.boxPreview}>\n          <TemplateGenerator\n            accomodation={fakeAccomodation}\n            owner={fakeOwner}\n            date={fakeDate}\n            template={template}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default TemplateEdit;\n"]},"metadata":{},"sourceType":"module"}