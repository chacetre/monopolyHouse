{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hook-pedal/src/views/ProductList/components/ProductCard.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, CardActions, Typography, Grid, Divider, Button } from '@material-ui/core';\nimport InformationsPedalModal from './InformationsPedalModal';\nimport AddPedalModal from './AddPedalModal';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  imageContainer: {\n    marginRight: 20,\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: '5px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    justifyItems: 'center'\n  },\n  image: {\n    width: '100%'\n  },\n  statsItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statsIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = props => {\n  const {\n    className,\n    product,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [openModal, setOpenModal] = useState(false);\n  const [openModifyModal, setOpenModifyModal] = useState(false);\n\n  const handleClickShowInfos = event => {\n    setOpenModal(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InformationsPedalModal, {\n    productData: product,\n    onClose: modifyAction => {\n      setOpenModal(false);\n      setOpenModifyModal(modifyAction);\n    },\n    open: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(AddPedalModal, {\n    pedalInformations: product,\n    onClose: color => {\n      setOpenModifyModal(false);\n    },\n    open: openModifyModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Product\",\n    className: classes.image,\n    src: \"/images/pedal_icon.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, product.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Nombre produite : \", product.totalMade)))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.statsItem,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickShowInfos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \" VOIR LES COMPOSANTS\")), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.statsItem,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"AJOUTER\"))))));\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\nexport default ProductCard;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hook-pedal/src/views/ProductList/components/ProductCard.js"],"names":["React","useState","PropTypes","clsx","makeStyles","Card","CardContent","CardActions","Typography","Grid","Divider","Button","InformationsPedalModal","AddPedalModal","useStyles","theme","root","imageContainer","marginRight","border","palette","divider","borderRadius","overflow","display","alignItems","justifyContent","justifyItems","image","width","statsItem","statsIcon","color","icon","spacing","ProductCard","props","className","product","rest","classes","openModal","setOpenModal","openModifyModal","setOpenModifyModal","handleClickShowInfos","event","modifyAction","title","totalMade","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  Divider,\n  Button\n} from '@material-ui/core';\nimport InformationsPedalModal from './InformationsPedalModal';\nimport AddPedalModal from './AddPedalModal';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  imageContainer: {\n    marginRight: 20,\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: '5px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    justifyItems: 'center'\n  },\n  image: {\n    width: '100%'\n  },\n  statsItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statsIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = props => {\n  const { className, product, ...rest } = props;\n\n  const classes = useStyles();\n  const [openModal, setOpenModal] = useState(false);\n  const [openModifyModal, setOpenModifyModal] = useState(false);\n\n  const handleClickShowInfos = event => {\n    setOpenModal(true);\n  };\n\n  return (\n    <>\n    <InformationsPedalModal\n        productData={product}\n        onClose={modifyAction => {\n          setOpenModal(false);\n          setOpenModifyModal(modifyAction);\n        }}\n        open={openModal}\n      />\n\n      <AddPedalModal\n        pedalInformations={product}\n        onClose={color => {\n          setOpenModifyModal(false);\n        }}\n        open={openModifyModal}\n      />\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid container>\n          <Grid xs={4}>\n            <div className={classes.imageContainer}>\n              <img\n                alt=\"Product\"\n                className={classes.image}\n                src='/images/pedal_icon.svg'\n              />\n            </div>\n          </Grid>\n          <Grid xs={8}>\n            <Typography gutterBottom variant=\"h4\">\n              {product.title} \n            </Typography>\n            <Typography  variant=\"body1\">\n              Nombre produite : {product.totalMade}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Grid container justify=\"space-between\">\n          <Grid className={classes.statsItem} item>\n            <Button onClick={handleClickShowInfos}> VOIR LES COMPOSANTS</Button>\n          </Grid>\n          <Grid className={classes.statsItem} item>\n        \n            <Button>AJOUTER</Button>\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n    </>\n  );\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}