{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/Macron business/src/components/MonthYearPicker/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { Modal, Card, CardHeader, CardContent, CardActions, Grid, Divider, Typography, Radio, RadioGroup, FormControlLabel, MenuItem, Button, IconButton, Select, InputLabel, TextField } from \"@material-ui/core\";\nimport { KeyboardArrowRightRounded, KeyboardArrowLeftRounded } from \"@material-ui/icons\";\nimport html2canvas from \"html2canvas\";\nimport Template from \"../../views/Receipt/Template\";\nimport jsPDF from \"jspdf\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    outline: \"none\",\n    boxShadow: theme.shadows[20]\n  },\n  centerTitle: {\n    textAlign: \"center\"\n  },\n  actionBar: {\n    display: \"flex\",\n    textAlign: \"right\",\n    justifyItems: 'right',\n    alignContent: 'right',\n    alignItems: 'right',\n    justifyContent: 'right'\n  },\n  expand: {\n    marginLeft: \"auto\"\n  }\n}));\nconst month = [\"janvier\", \"fevrier\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"aout\", \"septembre\", \"octobre\", \"novembre\", \"decembre\"];\n\nfunction MonthYearPicker({\n  open,\n  className,\n  handleChange,\n  onClose,\n  initialValue,\n  currentAccomodation,\n  ownerInformations,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [year, setYear] = useState(2100);\n  const [monthSelect, setMonth] = useState(\"Jan\");\n  const [dateReceipt, setDateReceipt] = useState({});\n\n  function createPDF() {\n    var namePDF = currentAccomodation.rental.firstname + \"_\" + currentAccomodation.rental.lastname + \"_\" + monthSelect + \"_\" + year + \".pdf\";\n    const input = document.querySelector(\".divToPrint\");\n\n    if (input != null) {\n      html2canvas(input).then(canvas => {\n        const image = canvas.toDataURL(\"image/png\");\n        const pdf = jsPDF(\"p\", \"mm\", \"a4\");\n        const width = 210;\n        const height = 297;\n        pdf.addImage(image, 0, 0, width, height);\n        pdf.save(namePDF);\n      });\n    } else {\n      console.log(\"isNULL\");\n    }\n  }\n\n  function handlePrevious() {\n    setYear(year => Number(year) - 1);\n  }\n\n  function handleNext() {\n    setYear(year => Number(year) + 1);\n  }\n\n  function handleMonth(value) {\n    setMonth(value);\n  }\n\n  const cancelClose = () => {\n    onClose();\n  };\n\n  const okClose = () => {\n    createPDF();\n    onClose(monthSelect, year);\n  };\n\n  useEffect(() => {\n    if (initialValue != undefined) {\n      setYear(initialValue.split(\" \")[1]);\n      setMonth(initialValue.split(\" \")[0].toLowerCase());\n    }\n  }, [initialValue]);\n  useEffect(() => {\n    setDateReceipt({\n      month: monthSelect,\n      year: year\n    });\n  }, [monthSelect, year]);\n\n  if (!open) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: onClose,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Template, {\n    owner: ownerInformations,\n    accomodation: currentAccomodation,\n    date: dateReceipt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      className: classes.centerTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, year),\n    action: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: handlePrevious,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardArrowLeftRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: handleNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardArrowRightRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, month.map(row => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, monthSelect == row && /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => handleMonth(\"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, row), monthSelect != row && /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    fullWidth: true,\n    onClick: () => handleMonth(row),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, row))))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.actionBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.expand,\n    onClick: cancelClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Annuler\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: okClose,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"T\\xE9l\\xE9charger\"))));\n}\n\nMonthYearPicker.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\nMonthYearPicker.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\nexport default MonthYearPicker;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/Macron business/src/components/MonthYearPicker/index.js"],"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","withStyles","Modal","Card","CardHeader","CardContent","CardActions","Grid","Divider","Typography","Radio","RadioGroup","FormControlLabel","MenuItem","Button","IconButton","Select","InputLabel","TextField","KeyboardArrowRightRounded","KeyboardArrowLeftRounded","html2canvas","Template","jsPDF","useStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","centerTitle","textAlign","actionBar","display","justifyItems","alignContent","alignItems","justifyContent","expand","marginLeft","month","MonthYearPicker","open","className","handleChange","onClose","initialValue","currentAccomodation","ownerInformations","rest","classes","year","setYear","monthSelect","setMonth","dateReceipt","setDateReceipt","createPDF","namePDF","rental","firstname","lastname","input","document","querySelector","then","canvas","image","toDataURL","pdf","width","height","addImage","save","console","log","handlePrevious","Number","handleNext","handleMonth","value","cancelClose","okClose","undefined","split","toLowerCase","map","row","propTypes","string","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  Typography,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  MenuItem,\n  Button,\n  IconButton,\n  Select,\n  InputLabel,\n  TextField,\n} from \"@material-ui/core\";\nimport {\n  KeyboardArrowRightRounded,\n  KeyboardArrowLeftRounded,\n} from \"@material-ui/icons\";\nimport html2canvas from \"html2canvas\";\nimport Template from \"../../views/Receipt/Template\";\nimport jsPDF from \"jspdf\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    outline: \"none\",\n    boxShadow: theme.shadows[20],\n  },\n  centerTitle: {\n    textAlign: \"center\",\n  },\n  actionBar: {\n      display: \"flex\",\n      textAlign: \"right\",\n    justifyItems: 'right',\n    alignContent: 'right',\n    alignItems: 'right',\n    justifyContent: 'right',\n  }, expand :{\n      marginLeft : \"auto\"\n  }\n}));\n\nconst month = [\n  \"janvier\",\n  \"fevrier\",\n  \"mars\",\n  \"avril\",\n  \"mai\",\n  \"juin\",\n  \"juillet\",\n  \"aout\",\n  \"septembre\",\n  \"octobre\",\n  \"novembre\",\n  \"decembre\",\n];\n\nfunction MonthYearPicker({\n  open,\n  className,\n  handleChange,\n  onClose,\n  initialValue,\n  currentAccomodation,\n  ownerInformations,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [year, setYear] = useState(2100);\n  const [monthSelect, setMonth] = useState(\"Jan\");\n  const [dateReceipt, setDateReceipt] = useState({});\n\n  function createPDF() {\n    \n    var namePDF = currentAccomodation.rental.firstname + \"_\" + currentAccomodation.rental.lastname + \"_\" + monthSelect + \"_\" + year + \".pdf\"\n\n    const input = document.querySelector(\".divToPrint\");\n    if (input != null) {\n      html2canvas(input).then((canvas) => {\n        const image = canvas.toDataURL(\"image/png\");\n        const pdf = jsPDF(\"p\", \"mm\", \"a4\");\n        const width = 210;\n        const height = 297;\n        pdf.addImage(image, 0, 0, width, height);\n        pdf.save(namePDF);\n      });\n    } else {\n      console.log(\"isNULL\");\n    }\n  }\n\n\n  function handlePrevious() {\n    setYear((year) =>  Number(year) - 1);\n  }\n\n  function handleNext() {\n    setYear((year) => Number(year) + 1);\n  }\n\n  function handleMonth(value) {\n    setMonth(value);\n  }\n\n  const cancelClose = () => {\n    onClose();\n  };\n\n  const okClose = () => {\n    createPDF()\n    onClose(monthSelect, year);\n  };\n\n  useEffect(() => {\n    if (initialValue != undefined) {\n      setYear(initialValue.split(\" \")[1]);\n      setMonth(initialValue.split(\" \")[0].toLowerCase());\n    }\n  }, [initialValue]);\n\n  useEffect(() => {\n    setDateReceipt({ month: monthSelect, year: year });\n  }, [monthSelect, year]);\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} open={open}>\n      <Card {...rest} className={clsx(classes.root, className)}>\n      <Template owner={ownerInformations} accomodation={currentAccomodation} date={dateReceipt} />\n        <CardHeader\n          title={\n            <Typography variant=\"h3\" className={classes.centerTitle}>\n              {year}\n            </Typography>\n          }\n          action={\n            <>\n              <IconButton onClick={handlePrevious}>\n                <KeyboardArrowLeftRounded />\n              </IconButton>\n              <IconButton onClick={handleNext}>\n                <KeyboardArrowRightRounded />\n              </IconButton>\n            </>\n          }\n        />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            {month.map((row) => (\n              <Grid item xs={3}>\n                {monthSelect == row && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    fullWidth\n                    onClick={() => handleMonth(\"\")}\n                  >\n                    {row}\n                  </Button>\n                )}\n                {monthSelect != row && (\n                  <Button\n                    variant=\"outlined\"\n                    fullWidth\n                    onClick={() => handleMonth(row)}\n                  >\n                    {row}\n                  </Button>\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        </CardContent>\n        <CardActions className={classes.actionBar}>\n          <Button className={classes.expand} onClick={cancelClose}>Annuler</Button>\n          <Button onClick={okClose} variant=\"contained\">Télécharger</Button>\n        </CardActions>\n      </Card>\n      \n    </Modal>\n  );\n}\n\nMonthYearPicker.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n};\n\nMonthYearPicker.defaultProps = {\n  open: false,\n  onClose: () => {},\n};\n\nexport default MonthYearPicker;\n"]},"metadata":{},"sourceType":"module"}