{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/AddElements/NewValueModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Modal, Card, CardHeader, CardContent, CardActions, Grid, Divider, Typography, TextField, Switch, Button, FormControl, Select, FormControlLabel } from \"@material-ui/core\";\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { saveNewValueInDataBase } from \"../../../../request/stockAPI\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    outline: \"none\",\n    boxShadow: theme.shadows[20],\n    width: 400,\n    maxHeight: \"100%\",\n    overflowY: \"auto\",\n    maxWidth: \"100%\"\n  },\n  actions: {\n    justifyContent: \"flex-end\"\n  },\n  toggleButton: {\n    height: \"100%\"\n  },\n  div: {\n    display: \"flex\"\n  },\n  center: {\n    marginBottom: 20\n  },\n  containerBottom: {\n    marginTop: 20\n  }\n}));\n\nfunction NewValueModal({\n  open,\n  onClose,\n  component,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [values, setValues] = useState({});\n\n  const handleChange = event => {\n    event.persist();\n    setValues(prevValues => ({ ...prevValues,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const saveNewValues = () => {\n    const scheme = {\n      label: values.label,\n      value: values.value,\n      stock: values.stock\n    };\n    saveNewValueInDataBase(component.name, component.type, scheme, component.length);\n  };\n\n  const cancelClose = () => {\n    onClose();\n  };\n\n  const saveClose = () => {\n    saveNewValues();\n    onClose();\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: onClose,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Nouvelle valeur\",\n    action: /*#__PURE__*/React.createElement(Button, {\n      onClick: cancelClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CloseRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.containerBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-value\",\n    label: \"Valeur\",\n    name: \"value\",\n    helperText: \"ex: twoOhm, threeNf\",\n    fullWidth: true,\n    onChange: handleChange,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-value\",\n    label: \"Label\",\n    name: \"label\",\n    helperText: \"Nom d'affichage\",\n    fullWidth: true,\n    onChange: handleChange,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    name: \"stock\",\n    label: \"Stock\",\n    onChange: handleChange,\n    variant: \"outlined\",\n    size: \"small\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: saveClose,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Ajouter\")))));\n}\n\nNewValueModal.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\nNewValueModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\nexport default NewValueModal;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/AddElements/NewValueModal.js"],"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","Modal","Card","CardHeader","CardContent","CardActions","Grid","Divider","Typography","TextField","Switch","Button","FormControl","Select","FormControlLabel","CloseRounded","ToggleButton","ToggleButtonGroup","saveNewValueInDataBase","useStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","actions","justifyContent","toggleButton","height","div","display","center","marginBottom","containerBottom","marginTop","NewValueModal","open","onClose","component","className","rest","classes","values","setValues","handleChange","event","persist","prevValues","target","name","value","saveNewValues","scheme","label","stock","type","length","cancelClose","saveClose","propTypes","string","customer","any","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  Typography,\n  TextField,\n  Switch,\n  Button,\n  FormControl,\n  Select,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { saveNewValueInDataBase } from \"../../../../request/stockAPI\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    outline: \"none\",\n    boxShadow: theme.shadows[20],\n    width: 400,\n    maxHeight: \"100%\",\n    overflowY: \"auto\",\n    maxWidth: \"100%\",\n  },\n  actions: {\n    justifyContent: \"flex-end\",\n  },\n  toggleButton: {\n    height: \"100%\",\n  },\n  div: {\n    display: \"flex\",\n  },\n  center: {\n    marginBottom: 20,\n  },\n  containerBottom: {\n    marginTop: 20,\n  },\n}));\n\nfunction NewValueModal({ open, onClose, component, className, ...rest }) {\n  const classes = useStyles();\n  const [values, setValues] = useState({});\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setValues((prevValues) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const saveNewValues = () => {\n  \n    const scheme = {\n      label: values.label,\n      value: values.value,\n      stock: values.stock,\n    };\n    saveNewValueInDataBase(component.name, component.type, scheme, component.length);\n  };\n\n  const cancelClose = () => {\n    onClose();\n  };\n\n  const saveClose = () => {\n    saveNewValues();\n    onClose();\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} open={open}>\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <form>\n          <CardHeader\n            title=\"Nouvelle valeur\"\n            action={\n              <Button onClick={cancelClose}>\n                <CloseRounded />\n              </Button>\n            }\n          />\n          <Divider />\n          <CardContent>\n            <Grid container spacing={1} className={classes.containerBottom}>\n              <Grid item xs={3}>\n                <TextField\n                  id=\"outlined-select-value\"\n                  label=\"Valeur\"\n                  name=\"value\"\n                  helperText=\"ex: twoOhm, threeNf\"\n                  fullWidth\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  id=\"outlined-select-value\"\n                  label=\"Label\"\n                  name=\"label\"\n                  helperText=\"Nom d'affichage\"\n                  fullWidth\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item xs={2}>\n                <TextField\n                  fullWidth\n                  name=\"stock\"\n                  label=\"Stock\"\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  type=\"number\"\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <CardActions className={classes.actions}>\n            <Button color=\"primary\" onClick={saveClose} variant=\"contained\">\n              Ajouter\n            </Button>\n          </CardActions>\n        </form>\n      </Card>\n    </Modal>\n  );\n}\n\nNewValueModal.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n};\n\nNewValueModal.defaultProps = {\n  open: false,\n  onClose: () => {},\n};\n\nexport default NewValueModal;\n"]},"metadata":{},"sourceType":"module"}