{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hookpedals/src/views/ProductList/components/InformationsPedalModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { Modal, Card, CardHeader, CardContent, Table, TableBody, Divider, TableContainer, TableCell, Button, TableRow, IconButton, Grid } from \"@material-ui/core\";\nimport { getStockDataBase } from \"../../../request/stockAPI\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    outline: \"none\",\n    boxShadow: theme.shadows[20],\n    width: \"40%\",\n    maxHeight: \"90%\",\n    overflowY: \"auto\",\n    maxWidth: \"100%\"\n  },\n  actions: {\n    justifyContent: \"flex-end\"\n  },\n  center: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  divider: {\n    margin: 10\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14,\n    width: 100\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nfunction InformationsPedalModal({\n  open,\n  onClose,\n  productData,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  const cancelClose = () => {\n    onClose(false);\n  };\n\n  const modifyClose = () => {\n    onClose(true);\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: onClose,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: `Informations pÃ©dale : ${productData.title}`,\n    action: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      onClick: cancelClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: modifyClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Modifier\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, Object.keys(productData.components).map((component, i) => /*#__PURE__*/React.createElement(React.Fragment, null, (productData.components[component].quantity !== \"0\" || productData.components[component].quantity !== \"\") && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, productData.components[component].path)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 32\n    }\n  }, productData.components[component].label)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 32\n    }\n  }, productData.components[component].quantity)))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))));\n}\n\nInformationsPedalModal.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\nInformationsPedalModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\nexport default InformationsPedalModal;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/views/ProductList/components/InformationsPedalModal.js"],"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","withStyles","Modal","Card","CardHeader","CardContent","Table","TableBody","Divider","TableContainer","TableCell","Button","TableRow","IconButton","Grid","getStockDataBase","useStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","actions","justifyContent","center","display","alignItems","divider","margin","StyledTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","background","default","InformationsPedalModal","open","onClose","productData","className","rest","classes","cancelClose","modifyClose","title","Object","keys","components","map","component","i","quantity","container","path","label","propTypes","string","customer","any","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  Table,\n  TableBody,\n  Divider,\n  TableContainer,\n  TableCell,\n  Button,\n  TableRow,\n  IconButton,\n  Grid,\n} from \"@material-ui/core\";\nimport { getStockDataBase } from \"../../../request/stockAPI\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    outline: \"none\",\n    boxShadow: theme.shadows[20],\n    width: \"40%\",\n    maxHeight: \"90%\",\n    overflowY: \"auto\",\n    maxWidth: \"100%\",\n  },\n  actions: {\n    justifyContent: \"flex-end\",\n  },\n  center: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  divider: {\n    margin: 10,\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n    width: 100,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nfunction InformationsPedalModal({\n  open,\n  onClose,\n  productData,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  const cancelClose = () => {\n    onClose(false);\n  };\n\n  const modifyClose = () => {\n    onClose(true);\n  };\n\n  if (!open) {\n    return null;\n  }\n  return (\n    <Modal onClose={onClose} open={open}>\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <form>\n          <CardHeader\n            title={`Informations pÃ©dale : ${productData.title}`}\n            action={\n              <>\n                <Button onClick={cancelClose}>Close</Button>\n                <Button onClick={modifyClose}>Modifier</Button>\n              </>\n            }\n          />\n          <Divider />\n          <CardContent>\n            {Object.keys(productData.components).map((component, i) => (\n              <>\n                {(productData.components[component].quantity !== \"0\" ||\n                  productData.components[component].quantity !== \"\") && (\n                  <Grid container className={classes.container}>\n                    <Grid item> <Typography>{productData.components[component].path}</Typography></Grid>\n                    <Grid item><Typography>{productData.components[component].label}</Typography></Grid>\n                    <Grid item><Typography>{productData.components[component].quantity}</Typography></Grid>\n                  </Grid>\n                )}\n              </>\n            ))}\n          </CardContent>\n          <Divider />\n        </form>\n      </Card>\n    </Modal>\n  );\n}\n\nInformationsPedalModal.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n};\n\nInformationsPedalModal.defaultProps = {\n  open: false,\n  onClose: () => {},\n};\n\nexport default InformationsPedalModal;\n"]},"metadata":{},"sourceType":"module"}