{"ast":null,"code":"import Firebase from \"firebase\";\nexport const saveNewAccommodation = (accomodation, id, ownerId) => {\n  const existingUser = JSON.parse(localStorage.getItem(\"logged_user\"));\n  Firebase.database().ref(existingUser + \"/accomodations/\" + id).set({\n    id: id,\n    loyer: accomodation.loyer,\n    rental: accomodation.rental,\n    address: accomodation.address,\n    isCommercial: accomodation.isCommercial,\n    owner: ownerId\n  });\n};\nexport const deleteValueInDataBase = (type, soustype, index) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}/${index}`).set(null);\n  console.log(\"DATA SAVED\");\n};\nexport const updateAccomodation = value => {\n  const existingUser = JSON.parse(localStorage.getItem(\"logged_user\"));\n  Firebase.database().ref(`/${existingUser}/accomodations/${value.id}`).set(value);\n  console.log(\"DATA SAVED\");\n};\nexport const getAccomodationByOwner = (ownerID, callback) => {\n  const existingUser = JSON.parse(localStorage.getItem(\"logged_user\"));\n  let ref = Firebase.database().ref(existingUser + \"/accomodations\");\n  ref.orderByChild(\"owner\").equalTo(ownerID).on(\"value\", snapshot => {\n    const data = snapshot.val();\n    callback(data);\n  });\n};","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/Macron business/src/request/accomodationAPI.js"],"names":["Firebase","saveNewAccommodation","accomodation","id","ownerId","existingUser","JSON","parse","localStorage","getItem","database","ref","set","loyer","rental","address","isCommercial","owner","deleteValueInDataBase","type","soustype","index","console","log","updateAccomodation","value","getAccomodationByOwner","ownerID","callback","orderByChild","equalTo","on","snapshot","data","val"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,YAAD,EAAeC,EAAf,EAAmBC,OAAnB,KAA+B;AACjE,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAArB;AACAT,EAAAA,QAAQ,CAACU,QAAT,GACGC,GADH,CACON,YAAY,GAAG,iBAAf,GAAmCF,EAD1C,EAEGS,GAFH,CAEO;AACHT,IAAAA,EAAE,EAAEA,EADD;AAEHU,IAAAA,KAAK,EAAEX,YAAY,CAACW,KAFjB;AAGHC,IAAAA,MAAM,EAAEZ,YAAY,CAACY,MAHlB;AAIHC,IAAAA,OAAO,EAAEb,YAAY,CAACa,OAJnB;AAKHC,IAAAA,YAAY,EAAEd,YAAY,CAACc,YALxB;AAMHC,IAAAA,KAAK,EAAEb;AANJ,GAFP;AAUD,CAZM;AAcP,OAAO,MAAMc,qBAAqB,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,KAA2B;AAC9DrB,EAAAA,QAAQ,CAACU,QAAT,GACGC,GADH,CACQ,0BAAyBQ,IAAK,IAAGC,QAAS,IAAGC,KAAM,EAD3D,EAEGT,GAFH,CAEO,IAFP;AAGAU,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAC3C,QAAMpB,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAArB;AACAT,EAAAA,QAAQ,CAACU,QAAT,GACGC,GADH,CACQ,IAAGN,YAAa,kBAAiBoB,KAAK,CAACtB,EAAG,EADlD,EAEGS,GAFH,CAEOa,KAFP;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CANM;AAQP,OAAO,MAAMG,sBAAsB,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC3D,QAAMvB,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAArB;AACA,MAAIE,GAAG,GAAGX,QAAQ,CAACU,QAAT,GAAoBC,GAApB,CAAwBN,YAAY,GAAE,gBAAtC,CAAV;AACAM,EAAAA,GAAG,CACAkB,YADH,CACgB,OADhB,EAEGC,OAFH,CAEWH,OAFX,EAGGI,EAHH,CAGM,OAHN,EAGgBC,QAAD,IAAc;AACzB,UAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAN,IAAAA,QAAQ,CAACK,IAAD,CAAR;AACD,GANH;AAOD,CAVM","sourcesContent":["import Firebase from \"firebase\";\n\nexport const saveNewAccommodation = (accomodation, id, ownerId) => {\n  const existingUser = JSON.parse(localStorage.getItem(\"logged_user\"));\n  Firebase.database()\n    .ref(existingUser + \"/accomodations/\" + id)\n    .set({\n      id: id,\n      loyer: accomodation.loyer,\n      rental: accomodation.rental,\n      address: accomodation.address,\n      isCommercial: accomodation.isCommercial,\n      owner: ownerId,\n    });\n};\n\nexport const deleteValueInDataBase = (type, soustype, index) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}/${index}`)\n    .set(null);\n  console.log(\"DATA SAVED\");\n};\n\nexport const updateAccomodation = (value) => {\n  const existingUser = JSON.parse(localStorage.getItem(\"logged_user\"));\n  Firebase.database()\n    .ref(`/${existingUser}/accomodations/${value.id}`)\n    .set(value);\n  console.log(\"DATA SAVED\");\n};\n\nexport const getAccomodationByOwner = (ownerID, callback) => {\n  const existingUser = JSON.parse(localStorage.getItem(\"logged_user\"));\n  let ref = Firebase.database().ref(existingUser +\"/accomodations\");\n  ref\n    .orderByChild(\"owner\")\n    .equalTo(ownerID)\n    .on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      callback(data);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}