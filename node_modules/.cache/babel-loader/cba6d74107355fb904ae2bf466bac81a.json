{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/Macron business/src/views/Settings/Components/IndexInsee.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { func } from \"prop-types\";\nimport { Typography, Grid, TextField, Button } from \"@material-ui/core\";\nimport { getIndexesAPI, updateIndexesAPI, saveNewIndex } from \"request/settingsAPI\";\nconst trimesters = [\"T1\", \"T2\", \"T3\", \"T4\"];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  button: {\n    marginBottom: 30\n  },\n  titleCell: {\n    marginBottom: 10\n  }\n}));\n\nconst IndexInsee = () => {\n  const classes = useStyles();\n  const currentDate = new Date().toLocaleString(\"default\", {\n    year: \"numeric\"\n  });\n  const years = [Number(currentDate), Number(currentDate) - 1, Number(currentDate) - 2];\n  const [indexes, setIndexes] = useState({});\n  const [isChange, setChange] = useState(false);\n\n  function getIndexes() {\n    getIndexesAPI(response => {\n      setIndexes(response);\n    });\n  }\n\n  function handleChange(event) {\n    event.persist();\n    setChange(true);\n    setIndexes(prev => ({ ...prev,\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function handleSave() {\n    updateIndexesAPI(indexes);\n    setChange(false);\n  }\n\n  useEffect(() => {\n    getIndexes();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, isChange && /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Sauvegarder\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, years.map(year => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    xs: 4,\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.titleCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, year), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, trimesters.map(value => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 3,\n    xs: 3,\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: year + \"_\" + value,\n    size: \"small\",\n    fullWidth: true,\n    label: value,\n    value: indexes[year + \"_\" + value] || \"\",\n    type: \"number\",\n    onChange: handleChange,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })))))))));\n};\n\nexport default IndexInsee;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/Macron business/src/views/Settings/Components/IndexInsee.js"],"names":["React","useState","useEffect","makeStyles","withStyles","func","Typography","Grid","TextField","Button","getIndexesAPI","updateIndexesAPI","saveNewIndex","trimesters","useStyles","theme","root","padding","spacing","button","marginBottom","titleCell","IndexInsee","classes","currentDate","Date","toLocaleString","year","years","Number","indexes","setIndexes","isChange","setChange","getIndexes","response","handleChange","event","persist","prev","target","name","value","handleSave","map","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { func } from \"prop-types\";\nimport { Typography, Grid, TextField, Button } from \"@material-ui/core\";\nimport {\n  getIndexesAPI,\n  updateIndexesAPI,\n  saveNewIndex,\n} from \"request/settingsAPI\";\n\nconst trimesters = [\"T1\", \"T2\", \"T3\", \"T4\"];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  button: {\n    marginBottom: 30,\n  },\n  titleCell: {\n    marginBottom: 10,\n  },\n}));\n\nconst IndexInsee = () => {\n  const classes = useStyles();\n  const currentDate = new Date().toLocaleString(\"default\", {\n    year: \"numeric\",\n  });\n  const years = [\n    Number(currentDate),\n    Number(currentDate) - 1,\n    Number(currentDate) - 2,\n  ];\n  const [indexes, setIndexes] = useState({});\n  const [isChange, setChange] = useState(false);\n\n  function getIndexes() {\n    getIndexesAPI((response) => {\n      setIndexes(response);\n    });\n  }\n\n  function handleChange(event) {\n    event.persist();\n    setChange(true)\n\n    setIndexes((prev) => ({\n      ...prev,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  function handleSave() {\n    updateIndexesAPI(indexes);\n    setChange(false)\n  }\n\n  useEffect(() => {\n    getIndexes();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      {isChange && (\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          onClick={handleSave}\n        >\n          Sauvegarder\n        </Button>\n      )}\n\n      <Grid container spacing={5}>\n        {years.map((year) => (\n          <>\n            <Grid item lg={4} md={4} xs={4} className={classes.title}>\n              <Typography variant=\"h5\" className={classes.titleCell}>\n                {year}\n              </Typography>\n              <Grid container spacing={2}>\n                {trimesters.map((value) => (\n                  <Grid item lg={3} md={3} xs={3} className={classes.title}>\n                    <TextField\n                      name={year + \"_\" + value}\n                      size=\"small\"\n                      fullWidth\n                      label={value}\n                      value={indexes[year + \"_\" + value] || \"\"}\n                      type=\"number\"\n                      onChange={handleChange}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n          </>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default IndexInsee;\n"]},"metadata":{},"sourceType":"module"}