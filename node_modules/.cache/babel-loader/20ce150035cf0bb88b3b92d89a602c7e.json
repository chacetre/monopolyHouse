{"ast":null,"code":"import Firebase from 'firebase';\nexport const saveStockSousTypeInDataBase = (type, soustype, index, stock) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}/${index}/stock`).set(stock);\n  console.log('DATA SAVED');\n};\nexport const saveNewTypeInDataBase = (type, value, indexTypeAvailable) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}`).set({\n    [type]: [value]\n  });\n  Firebase.database().ref(`/stock/componentsStock/${type}/typeAvailable/0`).set(type);\n  Firebase.database().ref(`/stock/componentsAvailable/${indexTypeAvailable}`).set(type);\n  console.log('DATA SAVED');\n};\nexport const saveNewValueInDataBase = (type, soustype, value, index) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/${soustype}/${index}`).set(value);\n  console.log('DATA SAVED');\n};\nexport const saveNewSousTypeInDataBase = (type, soustype, value, indexTypeAvailable) => {\n  Firebase.database().ref(`/stock/componentsStock/${type}/typeAvailable/${indexTypeAvailable}`).set(soustype);\n  saveNewValueInDataBase(type, soustype, value, 0);\n  console.log('DATA SAVED');\n};\nexport const updateStockAfterAddPedals = (path, value) => {\n  Firebase.database().ref(`/stock/componentsStock/${path}/stock`).set(value);\n  console.log('DATA SAVED');\n};\nexport const getStockDataBase = callback => {\n  let ref = Firebase.database().ref('/stock');\n  ref.on('value', snapshot => {\n    const data = snapshot.val();\n    console.log('stock API', data);\n    callback(data);\n  });\n};","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hook-pedal/src/request/stockAPI.js"],"names":["Firebase","saveStockSousTypeInDataBase","type","soustype","index","stock","database","ref","set","console","log","saveNewTypeInDataBase","value","indexTypeAvailable","saveNewValueInDataBase","saveNewSousTypeInDataBase","updateStockAfterAddPedals","path","getStockDataBase","callback","on","snapshot","data","val"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,2BAA2B,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,EAAwBC,KAAxB,KAAkC;AAC3EL,EAAAA,QAAQ,CAACM,QAAT,GACGC,GADH,CACQ,0BAAyBL,IAAK,IAAGC,QAAS,IAAGC,KAAM,QAD3D,EAEGI,GAFH,CAEOH,KAFP;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMC,qBAAqB,GAAG,CAACT,IAAD,EAAOU,KAAP,EAAcC,kBAAd,KAAqC;AACxEb,EAAAA,QAAQ,CAACM,QAAT,GACGC,GADH,CACQ,0BAAyBL,IAAK,EADtC,EAEGM,GAFH,CAEO;AAAE,KAACN,IAAD,GAAQ,CAACU,KAAD;AAAV,GAFP;AAIAZ,EAAAA,QAAQ,CAACM,QAAT,GACGC,GADH,CACQ,0BAAyBL,IAAK,kBADtC,EAEGM,GAFH,CAEON,IAFP;AAIAF,EAAAA,QAAQ,CAACM,QAAT,GACGC,GADH,CACQ,8BAA6BM,kBAAmB,EADxD,EAEGL,GAFH,CAEON,IAFP;AAGAO,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CAbM;AAeP,OAAO,MAAMI,sBAAsB,GAAG,CAACZ,IAAD,EAAOC,QAAP,EAAiBS,KAAjB,EAAwBR,KAAxB,KAAkC;AACtEJ,EAAAA,QAAQ,CAACM,QAAT,GACGC,GADH,CACQ,0BAAyBL,IAAK,IAAGC,QAAS,IAAGC,KAAM,EAD3D,EAEGI,GAFH,CAEOI,KAFP;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CALM;AAOP,OAAO,MAAMK,yBAAyB,GAAG,CAACb,IAAD,EAAOC,QAAP,EAAiBS,KAAjB,EAAwBC,kBAAxB,KAA+C;AACtFb,EAAAA,QAAQ,CAACM,QAAT,GACGC,GADH,CACQ,0BAAyBL,IAAK,kBAAiBW,kBAAmB,EAD1E,EAEGL,GAFH,CAEOL,QAFP;AAGAW,EAAAA,sBAAsB,CAACZ,IAAD,EAAOC,QAAP,EAAiBS,KAAjB,EAAwB,CAAxB,CAAtB;AAEAH,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CAPM;AASP,OAAO,MAAMM,yBAAyB,GAAG,CAACC,IAAD,EAAOL,KAAP,KAAiB;AACxDZ,EAAAA,QAAQ,CAACM,QAAT,GACGC,GADH,CACQ,0BAAyBU,IAAK,QADtC,EAEGT,GAFH,CAEOI,KAFP;AAIAH,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CANM;AAQP,OAAO,MAAMQ,gBAAgB,GAAGC,QAAQ,IAAI;AAC1C,MAAIZ,GAAG,GAAGP,QAAQ,CAACM,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,CAAV;AACAA,EAAAA,GAAG,CAACa,EAAJ,CAAO,OAAP,EAAgBC,QAAQ,IAAI;AAC1B,UAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBY,IAAzB;AACAH,IAAAA,QAAQ,CAACG,IAAD,CAAR;AACD,GAJD;AAKD,CAPM","sourcesContent":["import Firebase from 'firebase';\n\nexport const saveStockSousTypeInDataBase = (type, soustype, index, stock) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}/${index}/stock`)\n    .set(stock);\n  console.log('DATA SAVED');\n};\n\nexport const saveNewTypeInDataBase = (type, value, indexTypeAvailable) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}`)\n    .set({ [type]: [value] });\n\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/typeAvailable/0`)\n    .set(type);\n\n  Firebase.database()\n    .ref(`/stock/componentsAvailable/${indexTypeAvailable}`)\n    .set(type);\n  console.log('DATA SAVED');\n};\n\nexport const saveNewValueInDataBase = (type, soustype, value, index) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/${soustype}/${index}`)\n    .set(value);\n  console.log('DATA SAVED');\n};\n\nexport const saveNewSousTypeInDataBase = (type, soustype, value, indexTypeAvailable) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${type}/typeAvailable/${indexTypeAvailable}`)\n    .set(soustype);\n  saveNewValueInDataBase(type, soustype, value, 0);\n\n  console.log('DATA SAVED');\n};\n\nexport const updateStockAfterAddPedals = (path, value) => {\n  Firebase.database()\n    .ref(`/stock/componentsStock/${path}/stock`)\n    .set(value);\n\n  console.log('DATA SAVED');\n};\n\nexport const getStockDataBase = callback => {\n  let ref = Firebase.database().ref('/stock');\n  ref.on('value', snapshot => {\n    const data = snapshot.val();\n    console.log('stock API', data);\n    callback(data);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}