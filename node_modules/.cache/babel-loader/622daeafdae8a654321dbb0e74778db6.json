{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStockComponent.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { Card, CardActions, CardContent, Avatar, IconButton, Table, TableBody, TableCell, TableHead, TableRow, TableContainer, CardHeader, Grid, Button } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  container: {\n    maxHeight: 740\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nconst TableStockComponent = props => {\n  const {\n    className,\n    listTable,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [componentInfo, setComponentInfo] = useState({});\n  const sizeGrid = 12 / (Object.keys(listTable).length - 1);\n  useEffect(() => {\n    console.log(\"component tableGE\", listTable);\n\n    if (listTable !== undefined) {\n      const index = Object.keys(listTable).findIndex(p => p.attr1 == \"typeAvailable\");\n      Object.keys(listTable).slice(index);\n      console.log(\"size list\", Object.keys(listTable).length - 1);\n      console.log(\"size\", 12 / (Object.keys(listTable).length - 1));\n      setComponentInfo(listTable);\n    }\n  }, [listTable]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \" Modifier\")), Object.keys(componentInfo).map((keyName, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: sizeGrid === 12 ? 6 : sizeGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, keyName !== \"typeAvailable\" && /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), keyName !== \"values\" && /*#__PURE__*/React.createElement(CardHeader, {\n    title: keyName,\n    style: {\n      textAlign: \"center\"\n    },\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, \"Valeur\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"Stock\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, Object.values(componentInfo[keyName]).map(user => /*#__PURE__*/React.createElement(StyledTableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 27\n    }\n  }, user.label), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 27\n    }\n  }, user.stock)))))))))));\n};\n\nTableStockComponent.propTypes = {\n  className: PropTypes.string,\n  listTable: PropTypes.object\n};\nexport default TableStockComponent;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStockComponent.js"],"names":["React","useEffect","useState","PropTypes","clsx","makeStyles","withStyles","Card","CardActions","CardContent","Avatar","IconButton","Table","TableBody","TableCell","TableHead","TableRow","TableContainer","CardHeader","Grid","Button","useStyles","theme","root","row","height","display","alignItems","marginTop","spacing","spacer","flexGrow","importButton","marginRight","exportButton","searchInput","container","maxHeight","headerTitle","paddingBottom","justifyContent","StyledTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","background","default","TableStockComponent","props","className","listTable","rest","classes","componentInfo","setComponentInfo","sizeGrid","Object","keys","length","console","log","undefined","index","findIndex","p","attr1","slice","map","keyName","i","textAlign","content","values","user","label","stock","propTypes","string","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableContainer,\n  CardHeader,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1),\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  importButton: {\n    marginRight: theme.spacing(1),\n  },\n  exportButton: {\n    marginRight: theme.spacing(1),\n  },\n  searchInput: {\n    marginRight: theme.spacing(1),\n  },\n  container: {\n    maxHeight: 740,\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst TableStockComponent = (props) => {\n  const { className, listTable, ...rest } = props;\n\n  const classes = useStyles();\n  const [componentInfo, setComponentInfo] = useState({});\n  const sizeGrid = 12 / (Object.keys(listTable).length - 1);\n\n  useEffect(() => {\n    console.log(\"component tableGE\", listTable);\n    if (listTable !== undefined) {\n      const index = Object.keys(listTable).findIndex(\n        (p) => p.attr1 == \"typeAvailable\"\n      );\n      Object.keys(listTable).slice(index);\n      console.log(\"size list\", Object.keys(listTable).length - 1);\n      console.log(\"size\", 12 / (Object.keys(listTable).length - 1));\n\n      setComponentInfo(listTable);\n    }\n  }, [listTable]);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Button> Modifier</Button>\n      </Grid>\n      {Object.keys(componentInfo).map((keyName, i) => (\n        <Grid item xs={sizeGrid === 12 ? 6 : sizeGrid}>\n          {keyName !== \"typeAvailable\" && (\n            <Card {...rest} className={clsx(classes.root, className)}>\n              {keyName !== \"values\" && (\n                <CardHeader\n                  title={keyName}\n                  style={{ textAlign: \"center\" }}\n                  action={\n                    <IconButton aria-label=\"settings\">\n                      <MoreVertIcon />\n                    </IconButton>\n                  }\n                />\n              )}\n              <CardContent className={classes.content}>\n                <TableContainer className={classes.container}>\n                  <Table stickyHeader size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Valeur</TableCell>\n                        <TableCell>Stock</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {Object.values(componentInfo[keyName]).map((user) => (\n                        <StyledTableRow>\n                          <StyledTableCell>{user.label}</StyledTableCell>\n                          <StyledTableCell>{user.stock}</StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </CardContent>\n            </Card>\n          )}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nTableStockComponent.propTypes = {\n  className: PropTypes.string,\n  listTable: PropTypes.object,\n};\n\nexport default TableStockComponent;\n"]},"metadata":{},"sourceType":"module"}