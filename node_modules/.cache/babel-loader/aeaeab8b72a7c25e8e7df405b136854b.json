{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hookpedals/src/views/Dashboard/components/ShoppingList.js\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, TableSortLabel } from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { getStockDataBase } from '../../../../request/stockAPI';\nimport mockData from './data';\nimport { StatusBullet } from 'components';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 800\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst LatestOrders = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [orders] = useState(mockData);\n  const [data, setData] = useState({});\n  const [listLowStock, setListLowStock] = useState([]);\n\n  function getStockLow() {\n    if (data === undefined || data === null || data.componentsStock === undefined) {\n      console.log('data', data);\n      return;\n    }\n\n    const listComponentLow = [];\n    console.log('data', data);\n    const listType = Object.values(data.componentsStock);\n    listType.forEach(element => {\n      const listSousType = Object.keys(element);\n      listSousType.forEach(sousType => {\n        if (sousType !== 'typeAvailable') {\n          Object.values(element[sousType]).forEach(value => {\n            if (value.stock < 4) {\n              const scheme = {\n                type: sousType,\n                value: value.label,\n                stock: value.stock\n              };\n              listComponentLow.push(scheme);\n            }\n          });\n        }\n      });\n    });\n    console.log('listComponentLow', listComponentLow);\n    setListLowStock(listComponentLow);\n  }\n\n  const getUserData = () => {\n    getStockDataBase(response => {\n      setData(response);\n    });\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n  useEffect(() => {\n    if (data !== undefined) {\n      getStockLow();\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Liste de course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, \"Composant\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"Nombre restant\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, listLowStock.map(order => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, order.type), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, order.value), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, order.stock)))))))));\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\nexport default LatestOrders;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/views/Dashboard/components/ShoppingList.js"],"names":["React","useState","useEffect","clsx","moment","PerfectScrollbar","PropTypes","makeStyles","Card","CardActions","CardHeader","CardContent","Button","Divider","Table","TableBody","TableCell","TableHead","TableRow","Tooltip","TableSortLabel","ArrowRightIcon","getStockDataBase","mockData","StatusBullet","useStyles","theme","root","content","padding","inner","minWidth","statusContainer","display","alignItems","status","marginRight","spacing","actions","justifyContent","statusColors","delivered","pending","refunded","LatestOrders","props","className","rest","classes","orders","data","setData","listLowStock","setListLowStock","getStockLow","undefined","componentsStock","console","log","listComponentLow","listType","Object","values","forEach","element","listSousType","keys","sousType","value","stock","scheme","type","label","push","getUserData","response","map","order","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,SARF,EASEC,SATF,EAUEC,SAVF,EAWEC,QAXF,EAYEC,OAZF,EAaEC,cAbF,QAcO,mBAdP;AAeA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAOC,QAAP,MAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,SAAS,GAAGlB,UAAU,CAACmB,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE,EAD+B;AAErCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GAF4B;AAKrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAL8B;AAQrCC,EAAAA,eAAe,EAAE;AACfC,IAAAA,OAAO,EAAE,MADM;AAEfC,IAAAA,UAAU,EAAE;AAFG,GARoB;AAYrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd;AADP,GAZ6B;AAerCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cAAc,EAAE;AADT;AAf4B,CAAL,CAAN,CAA5B;AAoBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,SADQ;AAEnBC,EAAAA,OAAO,EAAE,MAFU;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAMA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,MAAyBF,KAA/B;AAEA,QAAMG,OAAO,GAAGvB,SAAS,EAAzB;AAEA,QAAM,CAACwB,MAAD,IAAWhD,QAAQ,CAACsB,QAAD,CAAzB;AACA,QAAM,CAAC2B,IAAD,EAAOC,OAAP,IAAkBlD,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmD,YAAD,EAAeC,eAAf,IAAkCpD,QAAQ,CAAC,EAAD,CAAhD;;AAEA,WAASqD,WAAT,GAAsB;AACpB,QAAIJ,IAAI,KAAKK,SAAT,IAAsBL,IAAI,KAAK,IAA/B,IAAuCA,IAAI,CAACM,eAAL,KAAyBD,SAApE,EAA8E;AAC5EE,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBR,IAAnB;AACA;AACD;;AAED,UAAMS,gBAAgB,GAAG,EAAzB;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBR,IAAnB;AACA,UAAMU,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcZ,IAAI,CAACM,eAAnB,CAAjB;AAEAI,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,OAAO,IAAI;AAC1B,YAAMC,YAAY,GAAGJ,MAAM,CAACK,IAAP,CAAYF,OAAZ,CAArB;AAEAC,MAAAA,YAAY,CAACF,OAAb,CAAqBI,QAAQ,IAAI;AAC/B,YAAIA,QAAQ,KAAK,eAAjB,EAAiC;AAE/BN,UAAAA,MAAM,CAACC,MAAP,CAAcE,OAAO,CAACG,QAAD,CAArB,EAAiCJ,OAAjC,CAAyCK,KAAK,IAAI;AAEhD,gBAAIA,KAAK,CAACC,KAAN,GAAc,CAAlB,EAAoB;AACpB,oBAAMC,MAAM,GAAG;AACbC,gBAAAA,IAAI,EAAGJ,QADM;AAEbC,gBAAAA,KAAK,EAAEA,KAAK,CAACI,KAFA;AAGbH,gBAAAA,KAAK,EAAED,KAAK,CAACC;AAHA,eAAf;AAMAV,cAAAA,gBAAgB,CAACc,IAAjB,CAAsBH,MAAtB;AACD;AACA,WAXD;AAYD;AACF,OAhBD;AAkBD,KArBD;AAuBAb,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BC,gBAA/B;AACAN,IAAAA,eAAe,CAACM,gBAAD,CAAf;AACD;;AAED,QAAMe,WAAW,GAAG,MAAM;AACxBpD,IAAAA,gBAAgB,CAACqD,QAAQ,IAAI;AAC3BxB,MAAAA,OAAO,CAACwB,QAAD,CAAP;AACD,KAFe,CAAhB;AAGD,GAJD;;AAMAzE,EAAAA,SAAS,CAAC,MAAM;AACdwE,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIAxE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgD,IAAI,KAAKK,SAAb,EAAuB;AACrBD,MAAAA,WAAW;AACZ;AAEF,GALQ,EAKN,CAACJ,IAAD,CALM,CAAT;AAOA,sBACE,oBAAC,IAAD,oBACMH,IADN;AAEE,IAAA,SAAS,EAAE5C,IAAI,CAAC6C,OAAO,CAACrB,IAAT,EAAemB,SAAf,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEE,OAAO,CAACpB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEoB,OAAO,CAAClB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,CADF,CADF,eAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGsB,YAAY,CAACwB,GAAb,CAAiBC,KAAK,iBACrB,oBAAC,QAAD;AACE,IAAA,KAAK,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAK,CAACN,IAAlB,CAJF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYM,KAAK,CAACT,KAAlB,CALF,eAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCS,KAAK,CAACR,KADP,CANF,CADD,CADH,CAXF,CADF,CADF,CADF,CARF,CADF;AA2CD,CA3GD;;AA6GAzB,YAAY,CAACkC,SAAb,GAAyB;AACvBhC,EAAAA,SAAS,EAAExC,SAAS,CAACyE;AADE,CAAzB;AAIA,eAAenC,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { getStockDataBase } from '../../../../request/stockAPI';\n\nimport mockData from './data';\nimport { StatusBullet } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 800\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst LatestOrders = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [orders] = useState(mockData);\n  const [data, setData] = useState({});\n  const [listLowStock, setListLowStock] = useState([]);\n\n  function getStockLow(){\n    if (data === undefined || data === null || data.componentsStock === undefined){\n      console.log('data',data)\n      return;\n    }\n\n    const listComponentLow = [];\n\n    console.log('data',data)\n    const listType = Object.values(data.componentsStock);\n\n    listType.forEach(element => {\n      const listSousType = Object.keys(element)\n\n      listSousType.forEach(sousType => {\n        if (sousType !== 'typeAvailable'){\n\n          Object.values(element[sousType]).forEach(value => {\n            \n            if (value.stock < 4){\n            const scheme = {\n              type : sousType,\n              value: value.label,\n              stock: value.stock\n            }\n\n            listComponentLow.push(scheme);\n          }\n          });\n        }\n      });\n      \n    });\n\n    console.log('listComponentLow',listComponentLow)\n    setListLowStock(listComponentLow);\n  }\n\n  const getUserData = () => {\n    getStockDataBase(response => {\n      setData(response);\n    });\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  useEffect(() => {\n    if (data !== undefined){\n      getStockLow();\n    }\n    \n  }, [data]);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        title=\"Liste de course\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Type</TableCell>\n                  <TableCell>Composant</TableCell>\n                  <TableCell>\nNombre restant\n                  </TableCell>\n                  \n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {listLowStock.map(order => (\n                  <TableRow\n                    hover\n                    \n                  >\n                    <TableCell>{order.type}</TableCell>\n                    <TableCell>{order.value}</TableCell>\n                    <TableCell>\n                    {order.stock}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n"]},"metadata":{},"sourceType":"module"}