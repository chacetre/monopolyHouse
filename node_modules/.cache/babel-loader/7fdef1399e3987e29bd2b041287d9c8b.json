{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStock/StockInfo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport { Card, CardContent, IconButton, Table, TableBody, TableCell, TableHead, TableRow, TableContainer, CardHeader, TextField } from \"@material-ui/core\";\nimport EditRounded from \"@material-ui/icons/EditRounded\";\nimport SaveRounded from \"@material-ui/icons/SaveRounded\";\nimport { saveStockSousTypeInDataBase } from \"../../../../request/stockAPI\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  container: {\n    maxHeight: 740\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nconst StockInfo = props => {\n  const {\n    className,\n    groupComponents,\n    nameGroup,\n    nameParent,\n    isModifyNSave,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [modify, setModify] = useState(false);\n  const [stockComponents, setStockComponents] = useState(groupComponents);\n\n  function handleModifyStock(event) {\n    event.persist();\n    console.log(\"key\", event.target.id);\n    setStockComponents(prevFormState => ({ ...prevFormState,\n      [event.target.id]: { ...prevFormState[event.target.id],\n        stock: event.target.value\n      }\n    }));\n  }\n\n  function handleModify() {\n    isModifyNSave(true);\n    setModify(true);\n  }\n\n  function handleSave() {\n    saveStockSousTypeInDataBase(nameParent, nameGroup, stockComponents);\n    setModify(false);\n    isModifyNSave(false);\n  }\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: nameGroup,\n    style: {\n      textAlign: \"center\"\n    },\n    action: /*#__PURE__*/React.createElement(React.Fragment, null, !modify && /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      onClick: handleModify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(EditRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    })), modify && /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      onClick: handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SaveRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Valeur\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Stock\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, Object.values(stockComponents).map((user, index) => /*#__PURE__*/React.createElement(StyledTableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, user.label), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    size: \"small\",\n    type: \"number\",\n    id: index,\n    key: index,\n    onChange: handleModifyStock,\n    disabled: !modify,\n    value: user.stock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  })))))))));\n};\n\nStockInfo.propTypes = {\n  className: PropTypes.string,\n  groupComponents: PropTypes.object\n};\nexport default StockInfo;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/views/Stock/components/TableStock/StockInfo.js"],"names":["React","useEffect","useState","PropTypes","clsx","makeStyles","withStyles","Card","CardContent","IconButton","Table","TableBody","TableCell","TableHead","TableRow","TableContainer","CardHeader","TextField","EditRounded","SaveRounded","saveStockSousTypeInDataBase","useStyles","theme","root","row","height","display","alignItems","marginTop","spacing","spacer","flexGrow","importButton","marginRight","exportButton","searchInput","container","maxHeight","headerTitle","paddingBottom","justifyContent","StyledTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","background","default","StockInfo","props","className","groupComponents","nameGroup","nameParent","isModifyNSave","rest","classes","modify","setModify","stockComponents","setStockComponents","handleModifyStock","event","persist","console","log","target","id","prevFormState","stock","value","handleModify","handleSave","textAlign","content","Object","values","map","user","index","label","propTypes","string","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,qBAAvC;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,QARF,EASEC,cATF,EAUEC,UAVF,EAWEC,SAXF,QAYO,mBAZP;AAaA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,2BAAT,QAA4C,8BAA5C;AAEA,MAAMC,SAAS,GAAGhB,UAAU,CAAEiB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE,EADiC;AAEvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE,MADL;AAEHC,IAAAA,OAAO,EAAE,MAFN;AAGHC,IAAAA,UAAU,EAAE,QAHT;AAIHC,IAAAA,SAAS,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd;AAJR,GAFkC;AAQvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAR+B;AAWvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAEX,KAAK,CAACO,OAAN,CAAc,CAAd;AADD,GAXyB;AAcvCK,EAAAA,YAAY,EAAE;AACZD,IAAAA,WAAW,EAAEX,KAAK,CAACO,OAAN,CAAc,CAAd;AADD,GAdyB;AAiBvCM,EAAAA,WAAW,EAAE;AACXF,IAAAA,WAAW,EAAEX,KAAK,CAACO,OAAN,CAAc,CAAd;AADF,GAjB0B;AAoBvCO,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF,GApB4B;AAuBvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,aAAa,EAAE,CADJ;AAEXb,IAAAA,OAAO,EAAE,MAFE;AAGXc,IAAAA,cAAc,EAAE,QAHL;AAIXb,IAAAA,UAAU,EAAE;AAJD;AAvB0B,CAAZ,CAAD,CAA5B;AA+BA,MAAMc,eAAe,GAAGnC,UAAU,CAAEgB,KAAD,KAAY;AAC7CoB,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAErB,KAAK,CAACsB,OAAN,CAAcC,MAAd,CAAqBC,KADlC;AAEJC,IAAAA,KAAK,EAAEzB,KAAK,CAACsB,OAAN,CAAcC,MAAd,CAAqBG;AAFxB,GADuC;AAK7CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AALuC,CAAZ,CAAD,CAAV,CAQpBtC,SARoB,CAAxB;AAUA,MAAMuC,cAAc,GAAG7C,UAAU,CAAEgB,KAAD,KAAY;AAC5CC,EAAAA,IAAI,EAAE;AACJ,0BAAsB;AACpBoB,MAAAA,eAAe,EAAErB,KAAK,CAACsB,OAAN,CAAcQ,UAAd,CAAyBC;AADtB;AADlB;AADsC,CAAZ,CAAD,CAAV,CAMnBvC,QANmB,CAAvB;;AAQA,MAAMwC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,eAAb;AAA8BC,IAAAA,SAA9B;AAAyCC,IAAAA,UAAzC;AAAqDC,IAAAA,aAArD;AAAmE,OAAGC;AAAtE,MAA+EN,KAArF;AAEA,QAAMO,OAAO,GAAGzC,SAAS,EAAzB;AAEA,QAAM,CAAC0C,MAAD,EAASC,SAAT,IAAsB9D,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC+D,eAAD,EAAkBC,kBAAlB,IAAwChE,QAAQ,CAACuD,eAAD,CAAtD;;AAEA,WAASU,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCA,IAAAA,KAAK,CAACC,OAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,KAAK,CAACI,MAAN,CAAaC,EAAhC;AAEAP,IAAAA,kBAAkB,CAAEQ,aAAD,KAAoB,EACrC,GAAGA,aADkC;AAErC,OAACN,KAAK,CAACI,MAAN,CAAaC,EAAd,GAAmB,EACjB,GAAGC,aAAa,CAACN,KAAK,CAACI,MAAN,CAAaC,EAAd,CADC;AAEjBE,QAAAA,KAAK,EAAEP,KAAK,CAACI,MAAN,CAAaI;AAFH;AAFkB,KAApB,CAAD,CAAlB;AAOD;;AAED,WAASC,YAAT,GAAwB;AACtBjB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAI,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASc,UAAT,GAAsB;AACpB1D,IAAAA,2BAA2B,CAACuC,UAAD,EAAaD,SAAb,EAAwBO,eAAxB,CAA3B;AACAD,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AAED,sBACE,oBAAC,IAAD,oBAAUC,IAAV;AAAgB,IAAA,SAAS,EAAEzD,IAAI,CAAC0D,OAAO,CAACvC,IAAT,EAAeiC,SAAf,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEE,SADT;AAEE,IAAA,KAAK,EAAE;AAAEqB,MAAAA,SAAS,EAAE;AAAb,KAFT;AAGE,IAAA,MAAM,eACJ,0CACG,CAAChB,MAAD,iBACC,oBAAC,UAAD;AAAY,oBAAW,UAAvB;AAAkC,MAAA,OAAO,EAAEc,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,EAMGd,MAAM,iBACL,oBAAC,UAAD;AAAY,oBAAW,UAAvB;AAAkC,MAAA,OAAO,EAAEe,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPJ,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAmBE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEhB,OAAO,CAACkB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAElB,OAAO,CAAC1B,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,YAAY,MAAnB;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,CADF,eAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG6C,MAAM,CAACC,MAAP,CAAcjB,eAAd,EAA+BkB,GAA/B,CAAmC,CAACC,IAAD,EAAOC,KAAP,kBAClC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,IAAI,CAACE,KAAvB,CADF,eAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,EAAE,EAAED,KAJN;AAKE,IAAA,GAAG,EAAEA,KALP;AAME,IAAA,QAAQ,EAAElB,iBANZ;AAOE,IAAA,QAAQ,EAAE,CAACJ,MAPb;AAQE,IAAA,KAAK,EAAEqB,IAAI,CAACT,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADD,CADH,CAPF,CADF,CADF,CAnBF,CADF;AAqDD,CArFD;;AAuFArB,SAAS,CAACiC,SAAV,GAAsB;AACpB/B,EAAAA,SAAS,EAAErD,SAAS,CAACqF,MADD;AAEpB/B,EAAAA,eAAe,EAAEtD,SAAS,CAACsF;AAFP,CAAtB;AAKA,eAAenC,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableContainer,\n  CardHeader,\n  TextField,\n} from \"@material-ui/core\";\nimport EditRounded from \"@material-ui/icons/EditRounded\";\nimport SaveRounded from \"@material-ui/icons/SaveRounded\";\nimport { saveStockSousTypeInDataBase } from \"../../../../request/stockAPI\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  row: {\n    height: \"42px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(1),\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  importButton: {\n    marginRight: theme.spacing(1),\n  },\n  exportButton: {\n    marginRight: theme.spacing(1),\n  },\n  searchInput: {\n    marginRight: theme.spacing(1),\n  },\n  container: {\n    maxHeight: 740,\n  },\n  headerTitle: {\n    paddingBottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst StockInfo = (props) => {\n  const { className, groupComponents, nameGroup, nameParent, isModifyNSave,...rest } = props;\n\n  const classes = useStyles();\n\n  const [modify, setModify] = useState(false);\n  const [stockComponents, setStockComponents] = useState(groupComponents);\n\n  function handleModifyStock(event) {\n    event.persist();\n    console.log(\"key\", event.target.id);\n\n    setStockComponents((prevFormState) => ({\n      ...prevFormState,\n      [event.target.id]: {\n        ...prevFormState[event.target.id],\n        stock: event.target.value,\n      },\n    }));\n  }\n\n  function handleModify() {\n    isModifyNSave(true);\n    setModify(true);\n  }\n\n  function handleSave() {\n    saveStockSousTypeInDataBase(nameParent, nameGroup, stockComponents);\n    setModify(false);\n    isModifyNSave(false);\n  }\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader\n        title={nameGroup}\n        style={{ textAlign: \"center\" }}\n        action={\n          <>\n            {!modify && (\n              <IconButton aria-label=\"settings\" onClick={handleModify}>\n                <EditRounded />\n              </IconButton>\n            )}\n            {modify && (\n              <IconButton aria-label=\"settings\" onClick={handleSave}>\n                <SaveRounded />\n              </IconButton>\n            )}\n          </>\n        }\n      />\n      <CardContent className={classes.content}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Valeur</TableCell>\n                <TableCell>Stock</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.values(stockComponents).map((user, index) => (\n                <StyledTableRow>\n                  <StyledTableCell>{user.label}</StyledTableCell>\n                  <StyledTableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      id={index}\n                      key={index}\n                      onChange={handleModifyStock}\n                      disabled={!modify}\n                      value={user.stock}\n                    />\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\nStockInfo.propTypes = {\n  className: PropTypes.string,\n  groupComponents: PropTypes.object,\n};\n\nexport default StockInfo;\n"]},"metadata":{},"sourceType":"module"}