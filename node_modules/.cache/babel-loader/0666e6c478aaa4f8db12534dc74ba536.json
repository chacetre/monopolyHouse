{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hook-pedal/src/views/ProductList/components/ProductCard.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, CardActions, Typography, Grid, Divider, Button } from '@material-ui/core';\nimport InformationsPedalModal from './InformationsPedalModal';\nimport AddPedalModal from './AddPedalModal';\nimport { addPedalsMadeDataBase } from '../../../request/pedalsAPI';\nimport { updateStockAfterAddPedals } from '../../../request/stockAPI';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  imageContainer: {\n    marginRight: 20,\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: '5px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    justifyItems: 'center'\n  },\n  image: {\n    width: '100%'\n  },\n  statsItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statsIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = props => {\n  const {\n    className,\n    product,\n    components,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [openModal, setOpenModal] = useState(false);\n  const [openModifyModal, setOpenModifyModal] = useState(false);\n\n  const handleClickShowInfos = event => {\n    setOpenModal(true);\n  };\n\n  function getNewStockComponent(component, stockNeed) {\n    const splitPathCompo = component.path.split('/');\n    console.log('splitPathCompo', splitPathCompo);\n    const valueCurrent = components.componentsStock[splitPathCompo[0]][splitPathCompo[1]];\n    const index = valueCurrent.findIndex(p => p.value == splitPathCompo[2]);\n    const stock = valueCurrent[index].stock - component.quantity;\n    updateStockAfterAddPedals(`/${splitPathCompo[0]}/${splitPathCompo[1]}/${index}`, stock);\n  }\n\n  function updateStockComponents() {\n    console.log('product', product);\n    Object.values(product.components).forEach(element => {\n      getNewStockComponent(element);\n    });\n  }\n\n  const handleAddPedalsMade = event => {\n    //addPedalsMadeDataBase(product.id, product.totalMade +1);\n    // updateStockAfterAddPedals();\n    updateStockComponents();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InformationsPedalModal, {\n    productData: product,\n    onClose: modifyAction => {\n      setOpenModal(false);\n      setOpenModifyModal(modifyAction);\n    },\n    open: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddPedalModal, {\n    pedalInformations: product,\n    onClose: color => {\n      setOpenModifyModal(false);\n    },\n    open: openModifyModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Product\",\n    className: classes.image,\n    src: \"/images/pedal_icon.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, product.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Nombre produite : \", product.totalMade)))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.statsItem,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickShowInfos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, ' ', \"VOIR LES COMPOSANTS\")), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.statsItem,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAddPedalsMade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"AJOUTER\"))))));\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\nexport default ProductCard;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hook-pedal/src/views/ProductList/components/ProductCard.js"],"names":["React","useState","PropTypes","clsx","makeStyles","Card","CardContent","CardActions","Typography","Grid","Divider","Button","InformationsPedalModal","AddPedalModal","addPedalsMadeDataBase","updateStockAfterAddPedals","useStyles","theme","root","imageContainer","marginRight","border","palette","divider","borderRadius","overflow","display","alignItems","justifyContent","justifyItems","image","width","statsItem","statsIcon","color","icon","spacing","ProductCard","props","className","product","components","rest","classes","openModal","setOpenModal","openModifyModal","setOpenModifyModal","handleClickShowInfos","event","getNewStockComponent","component","stockNeed","splitPathCompo","path","split","console","log","valueCurrent","componentsStock","index","findIndex","p","value","stock","quantity","updateStockComponents","Object","values","forEach","element","handleAddPedalsMade","modifyAction","title","totalMade","propTypes","string","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,OANF,EAOEC,MAPF,QAQO,mBARP;AASA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AACA,SAASC,yBAAT,QAA0C,2BAA1C;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAACa,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE,EAD+B;AAErCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,WAAW,EAAE,EADC;AAEdC,IAAAA,MAAM,EAAG,aAAYJ,KAAK,CAACK,OAAN,CAAcC,OAAQ,EAF7B;AAGdC,IAAAA,YAAY,EAAE,KAHA;AAIdC,IAAAA,QAAQ,EAAE,QAJI;AAKdC,IAAAA,OAAO,EAAE,MALK;AAMdC,IAAAA,UAAU,EAAE,QANE;AAOdC,IAAAA,cAAc,EAAE,QAPF;AAQdC,IAAAA,YAAY,EAAE;AARA,GAFqB;AAYrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GAZ8B;AAerCC,EAAAA,SAAS,EAAE;AACTN,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,UAAU,EAAE;AAFH,GAf0B;AAmBrCM,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAEjB,KAAK,CAACK,OAAN,CAAca,IADZ;AAETf,IAAAA,WAAW,EAAEH,KAAK,CAACmB,OAAN,CAAc,CAAd;AAFJ;AAnB0B,CAAL,CAAN,CAA5B;;AAyBA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,UAAtB;AAAkC,OAAGC;AAArC,MAA8CJ,KAApD;AAEA,QAAMK,OAAO,GAAG3B,SAAS,EAAzB;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B5C,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC6C,eAAD,EAAkBC,kBAAlB,IAAwC9C,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAM+C,oBAAoB,GAAGC,KAAK,IAAI;AACpCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,WAASK,oBAAT,CAA8BC,SAA9B,EAAyCC,SAAzC,EAAoD;AAClD,UAAMC,cAAc,GAAGF,SAAS,CAACG,IAAV,CAAeC,KAAf,CAAqB,GAArB,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,cAA9B;AACA,UAAMK,YAAY,GAChBjB,UAAU,CAACkB,eAAX,CAA2BN,cAAc,CAAC,CAAD,CAAzC,EAA8CA,cAAc,CAAC,CAAD,CAA5D,CADF;AAEA,UAAMO,KAAK,GAAGF,YAAY,CAACG,SAAb,CAAuBC,CAAC,IAAIA,CAAC,CAACC,KAAF,IAAWV,cAAc,CAAC,CAAD,CAArD,CAAd;AAEA,UAAMW,KAAK,GAAGN,YAAY,CAACE,KAAD,CAAZ,CAAoBI,KAApB,GAA4Bb,SAAS,CAACc,QAApD;AACAlD,IAAAA,yBAAyB,CAAE,IAAGsC,cAAc,CAAC,CAAD,CAAI,IAAGA,cAAc,CAAC,CAAD,CAAI,IAAGO,KAAM,EAArD,EAAuDI,KAAvD,CAAzB;AACD;;AAED,WAASE,qBAAT,GAAiC;AAC/BV,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBjB,OAAvB;AACA2B,IAAAA,MAAM,CAACC,MAAP,CAAc5B,OAAO,CAACC,UAAtB,EAAkC4B,OAAlC,CAA0CC,OAAO,IAAI;AACnDpB,MAAAA,oBAAoB,CAACoB,OAAD,CAApB;AACD,KAFD;AAGD;;AAED,QAAMC,mBAAmB,GAAGtB,KAAK,IAAI;AACnC;AACA;AACAiB,IAAAA,qBAAqB;AACtB,GAJD;;AAMA,sBACE,uDACE,oBAAC,sBAAD;AACE,IAAA,WAAW,EAAE1B,OADf;AAEE,IAAA,OAAO,EAAEgC,YAAY,IAAI;AACvB3B,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,kBAAkB,CAACyB,YAAD,CAAlB;AACD,KALH;AAME,IAAA,IAAI,EAAE5B,SANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,aAAD;AACE,IAAA,iBAAiB,EAAEJ,OADrB;AAEE,IAAA,OAAO,EAAEN,KAAK,IAAI;AAChBa,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,KAJH;AAKE,IAAA,IAAI,EAAED,eALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAiBE,oBAAC,IAAD,oBAAUJ,IAAV;AAAgB,IAAA,SAAS,EAAEvC,IAAI,CAACwC,OAAO,CAACzB,IAAT,EAAeqB,SAAf,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACxB,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAC,SADN;AAEE,IAAA,SAAS,EAAEwB,OAAO,CAACb,KAFrB;AAGE,IAAA,GAAG,EAAC,wBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAUE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,OAAO,CAACiC,KADX,CADF,eAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqBjC,OAAO,CAACkC,SAD7B,CAJF,CAVF,CADF,CADF,eAsBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,eAuBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE/B,OAAO,CAACX,SAAzB;AAAoC,IAAA,IAAI,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEgB,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,wBADF,CADF,eAOE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEL,OAAO,CAACX,SAAzB;AAAoC,IAAA,IAAI,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEuC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAPF,CADF,CAvBF,CAjBF,CADF;AAyDD,CA5FD;;AA8FAlC,WAAW,CAACsC,SAAZ,GAAwB;AACtBpC,EAAAA,SAAS,EAAErC,SAAS,CAAC0E,MADC;AAEtBpC,EAAAA,OAAO,EAAEtC,SAAS,CAAC2E,MAAV,CAAiBC;AAFJ,CAAxB;AAKA,eAAezC,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  Divider,\n  Button\n} from '@material-ui/core';\nimport InformationsPedalModal from './InformationsPedalModal';\nimport AddPedalModal from './AddPedalModal';\nimport { addPedalsMadeDataBase } from '../../../request/pedalsAPI';\nimport { updateStockAfterAddPedals } from '../../../request/stockAPI';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  imageContainer: {\n    marginRight: 20,\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: '5px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    justifyItems: 'center'\n  },\n  image: {\n    width: '100%'\n  },\n  statsItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statsIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = props => {\n  const { className, product, components, ...rest } = props;\n\n  const classes = useStyles();\n  const [openModal, setOpenModal] = useState(false);\n  const [openModifyModal, setOpenModifyModal] = useState(false);\n\n  const handleClickShowInfos = event => {\n    setOpenModal(true);\n  };\n\n  function getNewStockComponent(component, stockNeed) {\n    const splitPathCompo = component.path.split('/');\n    console.log('splitPathCompo', splitPathCompo);\n    const valueCurrent =\n      components.componentsStock[splitPathCompo[0]][splitPathCompo[1]];\n    const index = valueCurrent.findIndex(p => p.value == splitPathCompo[2]);\n\n    const stock = valueCurrent[index].stock - component.quantity;\n    updateStockAfterAddPedals(`/${splitPathCompo[0]}/${splitPathCompo[1]}/${index}`,stock);\n  }\n\n  function updateStockComponents() {\n    console.log('product', product);\n    Object.values(product.components).forEach(element => {\n      getNewStockComponent(element);\n    });\n  }\n\n  const handleAddPedalsMade = event => {\n    //addPedalsMadeDataBase(product.id, product.totalMade +1);\n    // updateStockAfterAddPedals();\n    updateStockComponents();\n  };\n\n  return (\n    <>\n      <InformationsPedalModal\n        productData={product}\n        onClose={modifyAction => {\n          setOpenModal(false);\n          setOpenModifyModal(modifyAction);\n        }}\n        open={openModal}\n      />\n\n      <AddPedalModal\n        pedalInformations={product}\n        onClose={color => {\n          setOpenModifyModal(false);\n        }}\n        open={openModifyModal}\n      />\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <CardContent>\n          <Grid container>\n            <Grid xs={4}>\n              <div className={classes.imageContainer}>\n                <img\n                  alt=\"Product\"\n                  className={classes.image}\n                  src=\"/images/pedal_icon.svg\"\n                />\n              </div>\n            </Grid>\n            <Grid xs={8}>\n              <Typography gutterBottom variant=\"h4\">\n                {product.title}\n              </Typography>\n              <Typography variant=\"body1\">\n                Nombre produite : {product.totalMade}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Grid container justify=\"space-between\">\n            <Grid className={classes.statsItem} item>\n              <Button onClick={handleClickShowInfos}>\n                {' '}\n                VOIR LES COMPOSANTS\n              </Button>\n            </Grid>\n            <Grid className={classes.statsItem} item>\n              <Button onClick={handleAddPedalsMade}>AJOUTER</Button>\n            </Grid>\n          </Grid>\n        </CardActions>\n      </Card>\n    </>\n  );\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}