{"ast":null,"code":"var _jsxFileName = \"/Users/charlottecetre/Desktop/hookpedals/src/views/ProductList/components/InformationsPedalModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles } from '@material-ui/styles';\nimport { Modal, Card, CardHeader, CardContent, Table, TableBody, Divider, TableContainer, TableCell, Button, TableRow } from '@material-ui/core';\nimport { getStockDataBase } from '../../../request/stockAPI';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: '40%',\n    maxHeight: '90%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  center: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  divider: {\n    margin: 10\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14,\n    width: 100\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nfunction InformationsPedalModal({\n  open,\n  onClose,\n  productData,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  const cancelClose = () => {\n    onClose(false);\n  };\n\n  const modifyClose = () => {\n    onClose(true);\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: onClose,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: `Informations pÃ©dale : ${productData.title}`,\n    action: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      onClick: cancelClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: modifyClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Modifier\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, Object.keys(productData.components).map((component, i) => /*#__PURE__*/React.createElement(React.Fragment, null, (productData.components[component].quantity !== '0' || productData.components[component].quantity !== ' ') && /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, productData.components[component].label), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  }, productData.components[component].quantity)))))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }))));\n}\n\nInformationsPedalModal.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\nInformationsPedalModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\nexport default InformationsPedalModal;","map":{"version":3,"sources":["/Users/charlottecetre/Desktop/hookpedals/src/views/ProductList/components/InformationsPedalModal.js"],"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","withStyles","Modal","Card","CardHeader","CardContent","Table","TableBody","Divider","TableContainer","TableCell","Button","TableRow","getStockDataBase","useStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","actions","justifyContent","center","display","alignItems","divider","margin","StyledTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","background","default","InformationsPedalModal","open","onClose","productData","className","rest","classes","cancelClose","modifyClose","title","Object","keys","components","map","component","i","quantity","container","label","propTypes","string","customer","any","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  Table,\n  TableBody,\n  Divider,\n  TableContainer,\n  TableCell,\n  Button,\n  TableRow\n} from '@material-ui/core';\nimport { getStockDataBase } from '../../../request/stockAPI';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: '40%',\n    maxHeight: '90%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  center: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  divider: {\n    margin: 10\n  }\n}));\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14,\n    width : 100\n  }\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nfunction InformationsPedalModal({ open, onClose, productData, className, ...rest }) {\n  const classes = useStyles();\n  \n  const cancelClose = () => {\n    onClose(false);\n  };\n\n  const modifyClose = () => {\n    onClose(true);\n  };\n\n  if (!open) {\n    return null;\n  }\n  return (\n    <Modal onClose={onClose} open={open}>\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <form>\n          <CardHeader\n            title={`Informations pÃ©dale : ${productData.title}`}\n            action={\n              <>\n                <Button onClick={cancelClose}>Close</Button>\n                <Button onClick={modifyClose}>Modifier</Button>\n              </>\n            }\n          />\n          <Divider />\n          <CardContent>\n            {Object.keys(productData.components).map((component, i) => (\n              <>{(productData.components[component].quantity !== '0' ||productData.components[component].quantity !== ' ' ) \n              && <TableContainer className={classes.container}>\n                <Table stickyHeader size=\"small\">\n                  <TableBody>\n                    <StyledTableRow>\n                      <StyledTableCell>{productData.components[component].label}</StyledTableCell>\n                      <StyledTableCell>{productData.components[component].quantity}</StyledTableCell>\n                    </StyledTableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>}\n              </>\n            ))}\n          </CardContent>\n          <Divider />\n        </form>\n      </Card>\n    </Modal>\n  );\n}\n\nInformationsPedalModal.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nInformationsPedalModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default InformationsPedalModal;\n"]},"metadata":{},"sourceType":"module"}